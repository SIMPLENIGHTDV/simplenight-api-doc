openapi: 3.0.0
servers:
  - description: Production
    url: https://beyond-hotels.simplenight.com/api/v1
  - description: Simplenight Live Sandbox
    url: https://beyond-hotels.staging.simplenight.com/api/v1
info:
  version: '2.0'
  title: Simplenight API
  x-logo:
    url: simplenight-logo.png
    backgroundColor: '#FFFFFF'
    altText: Simplenight logo
  description: >
    This document describes the Simplenight API.


    * The **Locations API** provides a list of Simplenight-supported locations,
    and convenience APIs for auto-complete.


    * The **Multi-Product API** supports Hotel, Activity and Dining searches,
    bookings and cancellations.


    * The **Hotels API** supports availability and booking of hotels alone. This
    API is now **deprecated**, in favor of the multi-product API.


    * The **Dinings API** supports availability and booking of dinings alone.
    This API is now **deprecated**, in favor of the multi-product API.


    Please note that every section is expandible and nests the endpoints
    sections, those have request and response schemas and examples.


    Requests can be tried live in our [Swagger UI interface](/index.html)
tags:
  - name: Locations
    description: >
      Location-related data (cities, regions, airports, etc).

      Each of these endpoints takes [ISO 3166-1 alpha-2 country
      code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) and [ISO 639-1
      language codes](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) as
      query parameters.

      Right now, the supported language codes are:

      * de 

      * ja

      * fr

      * ko

      * zh

      * en

      * es

      * th


      When searching for a city by prefix, when a non-supported language code is
      requested, English will be returned as a fall back.  In bulk export
      methods, only locations with a localization will be returned when
      searching with a language code.
  - name: MultiHotel
    description: >
      **Hotel searching, hotel and room details and availability, booking and
      cancel.**


      Please note that every section is expandible and nests the endpoints
      sections, those have request and response schemas and examples.


      ---


      # A practical example


      **Searching for the right hotel**


      John and Marie are traveling to San Francisco from October 28th to October
      31st. 


      First, it is necessary to use the */locations* endpoint to get San Francisco
      ID (*location_id*), may use */locations/cities* or */locations/prefix*.
      Searching through the response will find that San Francisco *location_id*
      is *5391959*.


      After getting San Francisco's *location_id*, the ID is used for a POST
      request to the */multi/search* endpoint, also indicating start and end
      date of the trip, the amount of people and the language and currency. For the dates, the format used is with yyyy-mm-dd, it is necessary to
      specify *start_date* as *"2021-10-28"* and *end_date* as *"2021-10-31"*.
      For the guests, we need to indicate in *occupancy* that there is only John
      and Marie going, so we specify for *adults* as *2*, *children* as *0*
      (this indicates the amount of children as guests) and *num_rooms* as *1*
      (this indicates the amount of rooms the guests need). At last, we indicate
      we need the information in english and want to know the rates in US
      dollars, so we indicate *"en"* for *language* property and *"USD"* for
      *currency* property.


      We will get as the response an array nesting different objects, each object
      has the information from a single hotel with all its information,
      including its *hotel_id*, address, description, photos, available rooms
      and information about them; also, information we provided before such as
      *start_date*, *end_date* and *occupancy*. We can use this information to
      display the different options John and Marie have for their journey and can
      choose their preferred hotel and room.


      **Do you want to know more about a hotel?**


      John and Marie want to take a closer look at a hotel that appears in the
      list, in this case it is *"Four Seasons Hotel San Francisco at Embarcadero"*.
      There is the option to simplify the response to a single specific hotel:
      we can use the */multi/search* endpoint as before, but instead of
      *"location_id": "5391959"* we will use *"hotel_id": "16750"* (The hotel_id
      is obtained from the */multi/search* we did before). The same result will
      come from */multi/hotel-details*.


      **Doing a reservation**


      They choose this hotel for their stay, so we need to make the booking for
      them and we will use */multi/book* endpoint for that. For this we will ask for
      some information from John and Marie, we need customer information (from
      who is buying: first name, last name, phone number, email and country) and
      traveler information (from who is the main traveler: first name, last name
      and occupancy) and payment information (billing address). Also, we will
      need information from the payment service, specifically the payment
      method, payment token and buyer verification token. On our part, we must
      declare a *transaction_id* (this is an arbitrary string used to identify a
      request and prevent duplicate bookings). To set the desired room, we will set 
      the information for the *room_type* parameter from the *room_types* array 
      given in */multi/search* response; and to set the price we need to use the
      information inside the *room_rate* parameter from the *rooms* array given in 
      */multi/hotel-price-verification* response. At last, with all the collected
      data we make a POST request to the endpoint following the example and
      schema given in the */multi/book* section below. The response will bring
      an object nesting the booking status (indicating if the booking was
      successful), *booking_id*, total price, payment information and booking
      reservation information.


      **Get the booking information any time**


      At this point, John and Marie have their proper reservation. Suppose that
      they forgot the address of the hotel or the arrival day, we can see the
      booking information using the */multi/cancel* endpoint. We need to do a
      POST request using the *booking_id* that we got in the response from the
      booking and the customer last name. The response will bring an object
      nesting information such as *booking_status*, *hotel_booking_id*, prices,
      itinerary and details, we will see the boolean *is_cancellable* parameter
      that indicates if we are able to cancel the booking (it will be *true*) or
      not (it will be *false*).


      **Do you need to cancel?**


      We can do the cancelation using the */multi/cancel-confirm*
      endpoint. For it, we will do a POST request using the same *booking_id*
      and customer last name as before, and adding the *hotel_booking_id*
      obtained from the response we got from the */multi/cancel* endpoint. The
      booking is successfuly canceled when we get the response indicating the
      booking id, record locator, the booking status as *cancelled*, the
      cancelled parameter as *true* and the amount refunded.
  - name: MultiDining
    description: >
      **Dining searching, details, availability, booking and cancel.**


      Please note that every section is expandible and nests the endpoints
      sections, those have request and response schemas and examples.


      ---


      # A practical example


      **Searching for the right dining place**


      John and Marie are going to San Francisco from October 28th to October
      31st. They are looking for somewhere to have dinner.


      First, it is necessary to use the */locations* endpoint to get San Francisco
      latitude and longitude, may use */locations/cities* or
      */locations/prefix*. Searching through the response, will find that San
      Francisco's *latitude* is *37.7878* and *longitude* is *-122.4075*.


      After getting San Francisco's latitude and longitude, you will use it for
      a POST request to the */multi/search* endpoint, also indicating the date,
      the amount of people and the time. The dining response is paginated, so we
      also have *current_page* to navigate trought the different pages and
      *page_page* that indicates the amount of items per page. For the date, the
      format used is with yyyy-mm-dd, it is necessary to specify the *date* as
      *"2021-10-29"*. For the time, the format used is 24 hours, so we will use
      "18:00" for *time* property. For the guests, we need to indicate in
      *covers* that there are only John and Marie going, so we specify it as *2*.
      Lastly we indicate the page we want to see and how many items we want
      there, so *current_page* will be set as *1* and *page_page* as *20*.


      We will get as a response an object nesting different objects, each object
      has the information from a single dining place with all its information,
      including its *dining_id*, name, photo, ratings, categories, location,
      phone and opening hours. We can use this information to display the
      different options John and Marie have for their journey and they can choose
      their preferred place and time.


      **Do you want to know more about a restaurant?**


      John and Marie want to take a closer look at a place that appears in the
      list, in this case it is *"Persona"*. There is the option to simplify the
      response to a single specific item: we can use the */multi/detail* endpoint,
      and use *"dining_id": "5D71_0GNtJiAbu-hivtA6g"* (The *dining_id* is
      obtained from the */multi/search* we did before).


      **Doing a reservation**


      They choose this place for their dining, so we need to make the booking
      for them and we will use the */multi/book* endpoint for that. For this we will
      request some information from John and Marie, we need customer information
      (from who is buying: first name, last name, phone number, email and
      country) and traveler information (from who is the main traveler: first
      name, last name and occupancy) and payment information (billing address).
      Also, we will need information from the payment service, specifically we
      need payment method, payment token and buyer verification token. On our
      part, we must declare a *transaction_id* (this is an arbitrary string used
      to identify a request and prevent duplicate bookings). At last, with all
      the collected data we make a POST request to the endpoint following the
      example and schema given in the */multi/book* section below. The response
      will bring an object nesting the booking status (indicating if the booking
      was successful), *booking_id*, dining name, date, time, address and number
      of guests.


      **Get the booking information any time**


      At this point, John and Marie have their proper reservation. Suppose that
      they forgot the address or the date, we can see the booking information
      using the */multi/cancel* endpoint. We need to do a POST request using the
      *booking_id* we got in the response from the booking and the customer last
      name. The response will bring an object nesting information such as
      *booking_status*, *dining_booking_id*, record locator, name, address,
      date, time, covers and booking status.


      **Do you need to cancel?**


      We can do the cancelation using the */multi/cancel-confirm*
      endpoint. For this, we will do a POST request using the same *booking_id*
      and customer last name as before, and adding the *dining_booking_id*
      obtained from the response we got from the */multi/cancel* endpoint. The
      booking is successfuly canceled when we get the response indicating the
      booking id, record locator, the booking status as *cancelled*, the
      cancelled parameter as *true*. For dining, there is no need to process refunds.
  - name: MultiActivity
    description: >
      **Activity searching, details, availability, booking and cancel.**


      Please note that every section is expandible and nests the endpoints
      sections, those have request and response schemas and examples.


      ---


      # A practical example


      **Searching for the right activity**


      John and Marie are going to San Francisco from October 28th to October
      31st. They are looking for an activity to do while they are there.


      First, it is necessary to use the */locations* endpoint to get the San Francisco
      ID (*location_id*), we may use */locations/cities* or */locations/prefix*.
      Searching through the response will find that San Francisco's *location_id*
      is *5391959*.


      After getting San Francisco's *location_id*, you will use it for a POST
      request to the */multi/search* endpoint, also indicating start and end date of
      the trip, the amount of people and currency. For the dates, the
      format used is with yyyy-mm-dd, it is necessary to specify the *start_date* as
      *"2021-10-28"* and *end_date* as *"2021-10-31"*. For the guests, we need
      to indicate that only John and Marie going, so we specify for
      *adults* as *2*, *children* as *0* (this indicates the amount of children
      as guests). Lastly, we indicate we want to know the rates in US dollars,
      so we indicate *"USD"* for *currency* property.


      We will get as a response an array nesting different objects, each object
      has the information from a single activity with all its information,
      including its *activity_id*, description, activity date, price, location,
      categories, images, rating, reviews, duration range, languages and meeting
      point. We can use this information to display the different options John
      and Marie have for their journey and they can choose their preferred activity.
      


      **Do you want to know more about an activity?**


      John and Marie want to take a closer look at an activity that appears in
      the list, in this case it is *"San Francisco happy hour and cocktail
      cruise"*. There is the option to simplify the response to a single
      specific item: we can use */multi/detail* endpoint, and use
      *"activity_id": "5fd67fa6:04353b69-2052-43a9-a109-fc238d438001"* (The
      *activity_id* is obtained from the */multi/search* we did before).


      **Let's check the available times**


      To know the available tickets for the activity, we will use the
      */multi/variants* endpoint. We just need to make a POST request to the
      endpoint indicating the *activity_id*, date and currency, and we will have
      a response with an object nesting the different variants available as
      arrays. The information received indicates the available times with their
      proper *code* (this code is unique for this variant of the selected
      activity), also name, description, price, capacity, currency and type of
      activity.


      **Doing a reservation**


      They choose the activity and time, so we need to make the booking for them
      and we will use the */multi/book* endpoint for that. For this we will ask some
      information from John and Marie, we need customer information (from who is
      buying: first name, last name, phone number, email and country) and
      traveler information (from who is the main traveler: first name, last name
      and occupancy) and payment information (billing address). Also, we will
      need information from the payment service, specifically the payment
      method, payment token and buyer verification token. On our part, we must
      declare a *transaction_id* (this is an arbitrary string used to identify a
      request and prevent duplicate bookings). At last, with all the data collected
      we make a POST request to the endpoint following the example and
      schema given in the */multi/book* section below (please note that the
      code inside the items array, is from the selected variant from the
      response we got from */multi/variants*). The response will bring an object
      nesting the booking status (indicating if the booking was successful),
      *booking_id*, prices, some payment information, status of the reservation,
      name of the activity, ids, date, time and address.


      **Get the booking information any time**


      At this point, John and Marie have their confirmed reservation. Suppose that
      they forget the address or the date, we can see the booking information
      using the */multi/cancel* endpoint. We need to do a POST request using the
      *booking_id* we got in the response from the booking and the customer last
      name. The response will bring an object nesting information such as
      *booking_status*, *activity_booking_id*, if its cancellable, amount to
      refund, and information about the selected activity.


      **Do you need to cancel?**


      We can do the cancelation using the */multi/cancel-confirm*
      endpoint. For this, we will do a POST request using the same *booking_id*
      and customer last name as before, and adding the *activity_booking_id*
      obtained from the response we got from the */multi/cancel* endpoint. The
      booking is successfuly cancelled when we get the response indicating the
      booking id, record locator, the booking status as *cancelled*, the
      cancelled parameter as *true* and the amount refunded.
  - name: MultiProduct
    description: >
      **Search, get details, availability, do bookings and cancel one or
      multiple products in a single request.**


      Currently, hotel, activity and dining are supported.


      Please note that every section is expandible and nests the endpoints
      sections, those have request and response schemas and examples.


      ---


      # A practical example


      **Searching for the right hotel, dining place and activity**


      John and Marie are going to San Francisco from October 28th to October
      31st. They are looking for a hotel, to have dinner and do an activity.


      First, it is necessary to use the /locations endpoint to get San Francisco's ID
      (*location_id*), latitude and longitude, we may use */locations/cities* or
      */locations/prefix*. Searching through the response will find that San
      Francisco's *location_id* is *5391959*, its *latitude* is *37.7878* and
      *longitude* is *-122.4075*.


      After getting San Francisco's *location_id*, you will use it for a POST
      request to the */multi/search* endpoint. We need to complete the fields
      for *product_types* as *“hotels”*, *“activities”* and/or *“dining”*,
      according John and Marie needs. Also complete each parameter as it
      follows: *hotel_search* including *location_id*, *start_date*, *end_date*,
      *occupancy* (*adults*, *children* and *num_rooms*), *language* and
      *currency*; *dining_search* including *covers*, *current_page*,
      *per_page*, *latitude*, *longitude*, *time* and *date*; *activity_search*
      including *location_id*, *begin_date*, *end_date*, *adults* and
      *children*.


      We will get as a response an object nesting arrays for each category named 
      *hotel_results*, *activity_results* and *dining_results*. Each array nests
      objects for each hotel, activity or dining, and their proper information. We
      can use this information to display the different options John and Marie
      have for their journey and they can make their preferred choice.


      **Do you want to know more about something?**


      John and Marie want to take a closer look at some options that appear in
      the list. There is the option to simplify the response to a specific item
      of activity and/or dining: we can use */multi/detail* endpoint. We can use
      the parameters *activity_detail* and *dining_detail* and get the details
      of a specific activity and/or restaurant. For hotels, we can use the
      */multi/search* endpoint, but instead of *"location_id"* we will use
      *"hotel_id"* (The *hotel_id* is obtained from the */multi/search* we did
      before).


      The response will return an object nesting an object for the requested
      activity and an object for the requested dining location.


      **Let's check the activity available times**


      To see the available tickets for the activity, we will use the
      */multi/variants* endpoint. We just need to make a POST request to the
      endpoint indicating the *activity_id*, *date* and *currency*, and we will
      have a response with an object nesting the different variants available as
      arrays. The information received indicates the available times and other
      information such as the proper code (this *code* is unique for this
      variant of the selected activity).


      **Doing a reservation**


      After John and Marie choose the hotel, activity and dining, we can help
      them do the booking and we will use the */multi/book* endpoint for this.
      We need to ask for some information from John and Marie, we need customer
      information (from who is buying: first name, last name, phone number,
      email and country) and traveler information (from who is the main
      traveler: first name, last name and occupancy) and payment information
      (billing address). Also, we will need information from the payment
      service, specifically the payment method, payment token and buyer
      verification token. On our part, we must declare a *transaction_id* (this
      is an arbitrary string used to identify a request and prevent duplicate
      bookings). Lastly, with all the data collected we make a POST request to
      the endpoint following the example and schema given in the */multi/book*
      section below. The response will bring an object nesting the booking
      status (indicating if the booking was successful), *booking_id*, prices,
      some payment information, status of the reservation, hotel reservation
      information, activity reservation information and dining reservation
      information.


      **Get the booking information any time**


      At this point, John and Marie have their confirmed reservation. Suppose that
      they forgot the address or the date, we can see the booking information
      using the */multi/cancel* endpoint. We need to do a POST request using the
      *booking_id* we got in the response from the booking and the customer last
      name. The response will bring an object nesting information of the whole
      booking and of each item booked.


      **Do you need to cancel?**


      We can do the cancelation using the */multi/cancel-confirm*
      endpoint. For this, we will do a POST request using the same *booking_id*
      and customer last name as before, and adding the *hotel_booking_id*,
      *activity_booking_id* and *dining_booking_id* obtained from the response
      we got from the */multi/cancel* endpoint. The booking is successfuly
      cancelled when we get the response indicating the booking ID, record locator, the booking status as cancelled, the cancelled parameter as true
      and the amount refunded.
  - name: Hotel
    description: >
      Hotel availabilty, hotel details, hotel booking, and hotel cancel
      endpoints.


      This API is now **deprecated**, in favor of the multi-product API.
  - name: Dining
    description: |
      Dining availabilty, Dining details, and Dining booking endpoints

      This API is now **deprecated**, in favor of the multi-product API.
security:
  - ApiKeyAuth: []
paths:
  //multi/search:
    post:
      tags:
        - MultiHotel
      summary: Search for available hotels
      description: >
        Using the parameters *location_id* (obtained from */location/cities*
        endpoint), *start_date*, *end_date*, *occupancy* (that contains
        *adults*, *children* and *num_rooms*), *language*, and *currency*.

        There is the posibility to use the parameter *hotel_id* in the place of
        *location_id* if you want to do a search for a specific hotel. The
        parameter *hotel_id* is obtained from */multi/search* response.


        Steps:


        1. Define *location_id* as *location_id* indicates in locations endpoint
        response for the desired location.


        2. Post to the API URL given, completing the fields for *product_types*
        as “hotels” and *hotel_search* that includes *location_id*,
        *start_date*, *end_date*, *occupancy* (that contains *adults*,
        *children* and *num_rooms*), *language*, and *currency*.


        3. The response is an array of hotels and its rooms available for the
        information provided in the request made. Each object has the following
        parameters: *hotel_id*, *start_date*, *end_date*, *hotel_details* (that
        contains: *name*, *address*, *hotel_code*, *checkin_time*,
        *checkout_time*, *photos*, *amenities*, *thumbnail_ur*, *geolocation*,
        *phone_number*, *email*, *homepage_url*, *chain_code*, *chain_name*,
        *star_rating*, *review_rating*, and *property_description*), *occupancy*
        (that contains *adults*, *children* and *num_rooms*), *room_types* (that
        for each room contains *code*, *name*, *description*, *amenities*,
        *photos*, *capacity*, *bed_types*, *total_base_rate*, *total_tax_rate*,
        *total*, *rate_type*, *avg_nightly_rate*, *cancellation_policy*,
        *daily_rates*, *unstructured_policies* and *postpaid_fees*),
        *avg_nightly_rate*, *avg_nightly_base*, *avg_nightly_tax* and *error*.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: >
                Parameters to search for hotels.  Will return all hotels
                available on any date between start_date and end_date for a
                given occupancy (children, adults).
              properties:
                product_types:
                  type: array
                  items:
                    example:
                      - hotels
                hotel_search:
                  type: object
                  title: Hotel search request
                  required:
                    - location_id
                    - start_date
                    - end_date
                    - occupancy
                  properties:
                    location_id:
                      type: string
                      description: Simplenight Hotel ID
                      example: '5391959'
                    start_date:
                      type: string
                      format: date
                      description: The checkin date
                      example: '2021-10-28'
                    end_date:
                      type: string
                      format: date
                      description: The checkout date
                      example: '2021-10-31'
                    occupancy:
                      type: object
                      properties:
                        adults:
                          type: number
                          description: The amount of adults guests
                          example: 2
                        children:
                          type: number
                          description: The amount of children guests
                          example: 0
                        num_rooms:
                          type: number
                          description: The amount of rooms the guests need.
                          example: 1
                    language:
                      type: string
                      minLength: 2
                      maxLength: 2
                      description: >-
                        Optional. ISO-formatted 2-character language code for
                        hotel details
                      example: en
                    currency:
                      type: string
                      minLength: 3
                      maxLength: 3
                      description: Optional.  ISO-format 3-character currency code
                      example: USD
      responses:
        '200':
          description: List of matching hotels
          content:
            application/json:
              schema:
                type: object
                properties:
                  hotel_results:
                    type: array
                    items:
                      type: object
                      required:
                        - hotel_id
                        - start_date
                        - end_date
                        - occupancy
                        - room_types
                        - rate_plans
                        - room_rates
                        - hotel_details
                        - average_nightly_rate
                        - average_nightly_tax
                        - average_nightly_base
                      properties:
                        hotel_id:
                          type: string
                          example: '16750'
                          description: A SimpleNights Hotel ID
                        start_date:
                          type: string
                          format: date
                          example: '2021-10-28'
                          description: Checkin date
                        end_date:
                          type: string
                          format: date
                          example: '2021-10-31'
                          description: Checkout date
                        hotel_details:
                          type: object
                          required:
                            - name
                            - address
                          properties:
                            name:
                              type: string
                              description: Name of the hotel
                              example: Four Seasons Hotel San Francisco at Embarcadero
                            address:
                              required:
                                - address1
                                - city
                                - province
                                - postal_code
                                - country
                              properties:
                                city:
                                  type: string
                                  description: The city of the hotel
                                  example: San Francisco
                                province:
                                  type: string
                                  description: The administrative region of the city
                                  example: CA
                                country:
                                  type: string
                                  description: ISO-format two-character country code
                                  example: US
                                address1:
                                  type: string
                                  example: 222 Sansome Street
                                  description: The first line of the address.  Required.
                                address2:
                                  type: string
                                  example: 1st Floor
                                  description: The second line of the address.  Optional.
                                address3:
                                  type: string
                                  example: Reception
                                  description: The third line of the address.  Optional.
                                postal_code:
                                  type: string
                                  example: CA 94104
                                  description: The postal code of the hotel
                            hotel_code:
                              type: string
                              description: The code for the hotel
                              example: '700256832'
                            checkin_time:
                              type: string
                              description: The time of the checkin
                              example: '15:00'
                            checkout_time:
                              type: string
                              description: The time of the checkout
                              example: '12:00'
                            photos:
                              type: array
                              items:
                                type: object
                                required:
                                  - url
                                  - type
                                  - display_order
                                properties:
                                  url:
                                    type: string
                                    example: >-
                                      https://q-xx.bstatic.com/xdata/images/hotel/max2000/268538679.jpg?k=88c6c50315703584977c228c619a140611b9eb45db92f28bf61125a9dfd37e7b&o=
                                    description: Hotel image URL.  Always in HTTPS.
                                  type:
                                    type: string
                                    example: exterior
                                    description: The type of hotel image being returned
                                  display_order:
                                    type: integer
                                    example: 1
                                    description: >-
                                      A suggested order to display the images,
                                      beginning with 1
                            amenities:
                              type: array
                              description: The amenities the hotel have to offer
                              items:
                                type: string
                              example:
                                - Pool
                                - Parking
                                - Spa
                                - Laundry Services
                                - Hot Tub
                                - Bar
                                - Health Club or Gym
                                - Restaurant
                                - Sauna
                            thumbnail_url:
                              type: string
                              example: >-
                                //mobileimg.priceline.com/htlimg/35/3505105/thumbnail-300-square.jpg
                              description: Hotel thumbnail image URL
                            geolocation:
                              type: object
                              required:
                                - latitude
                                - longitude
                              properties:
                                latitude:
                                  type: number
                                  example: '37.792325'
                                longitude:
                                  type: number
                                  example: '-122.400942'
                            phone_number:
                              type: string
                              example: +1 (555)-867-5309
                              description: Hotel phone number
                            email:
                              type: string
                              example: frontdesk@hotel.com
                              format: email
                              description: The hotel email address
                            homepage_url:
                              type: string
                              example: https://www.foobazhotel.com/
                              description: URL to the website's homepage
                            chain_code:
                              type: string
                              example: FS
                              description: Hotel chain code
                            chain_name:
                              type: string
                              example: Four Seasons
                              description: Hotel chain name
                            star_rating:
                              type: number
                              format: float
                              example: 5
                            review_rating:
                              type: number
                              format: float
                              example: 9.8
                            property_description:
                              type: string
                              example: >-
                                Featuring stunning views of downtown San
                                Francisco from each spacious guestroom, Four
                                Seasons Hotel San Francisco at Embarcadero
                                offers gourmet on-site dining, in-room massage
                                services and easy access to sites such as
                                Chinatown, 7 minutes’ walk away. Featuring free
                                WiFi, each air-conditioned room at Four Seasons
                                Hotel San Francisco at Embarcadero combines
                                timeless design with modern amenities such as
                                flat-screen TVs and iPod docking stations. With
                                rooms located on the top 11 floors of a 48-story
                                tower, the hotel offers breathtaking views of
                                San Francisco. In-room dining is available to
                                guests from 6:00 to 22:00. Guests of Four
                                Seasons Hotel San Francisco at Embarcadero can
                                start the day with a workout in the 24-hour
                                fitness centre or enjoy a yoga class. Offering
                                unique shops, restaurants and nightlife, vibrant
                                Union Square is 12 minutes’ walk away from this
                                hotel. Offering service to San Francisco
                                International Airport, Embarcadero BART (Bay
                                Area Rapid Transit) station is 6 minutes’ walk
                                away.
                              description: Description of the hotel property
                        occupancy:
                          type: object
                          properties:
                            adults:
                              type: number
                              description: The amount of adults guests
                              example: 2
                            children:
                              type: number
                              description: The amount of children guests
                              example: 0
                            num_rooms:
                              type: number
                              description: The amount of rooms the guests need.
                              example: 1
                        room_types:
                          type: array
                          items:
                            type: object
                            description: The types of physical rooms available
                            required:
                              - code
                              - name
                            properties:
                              code:
                                type: string
                                description: The unique ID for the room type
                                example: 9e130c1c
                              name:
                                type: string
                                description: The descriptive name for the room type
                                example: City View - Deluxe King
                              description:
                                type: string
                                description: The long description of the room type
                                example: City View - Deluxe King.
                              amenities:
                                type: array
                                items:
                                  type: string
                                example:
                                  - Minibar
                                  - Free wifi
                              photos:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - url
                                    - type
                                    - display_order
                                  properties:
                                    url:
                                      type: string
                                      example: >-
                                        https://q-xx.bstatic.com/xdata/images/hotel/max2000/165679674.jpg?k=96f777057b9d53a3d1561f4a9c440850baee267301757b64c03df79052a005a1&o=
                                      description: Hotel room image URL.  Always in HTTPS.
                                    type:
                                      type: string
                                      example: interior
                                      description: The type of hotel image being returned
                                    display_order:
                                      type: integer
                                      example: 1
                                      description: >-
                                        A suggested order to display the images,
                                        beginning with 1
                              capacity:
                                type: object
                                properties:
                                  adults:
                                    type: number
                                    description: The amount of adults guests
                                    example: 2
                                  children:
                                    type: number
                                    description: The amount of children guests
                                    example: 0
                                  num_rooms:
                                    type: number
                                    description: The amount of rooms the guests need.
                                    example: 1
                              bed_types:
                                type: object
                                description: >-
                                  The number and type of beds available in the
                                  room
                                properties:
                                  total_beds:
                                    type: integer
                                    example: 1
                                    description: The total number of beds in the room
                                  king_beds:
                                    type: integer
                                    example: 1
                                    description: >-
                                      The total number of king-sized beds in the
                                      room
                                  queen_beds:
                                    type: integer
                                    example: 0
                                    description: >-
                                      The total number of queen-sized beds in
                                      the room
                                  double_beds:
                                    type: integer
                                    example: 0
                                    description: >-
                                      The total number of double beds in the
                                      room
                                  single_or_twin_beds:
                                    type: integer
                                    example: 0
                                    description: >-
                                      The total number of single-sized beds in
                                      the room
                                  murphy_beds:
                                    type: integer
                                    example: 0
                                    description: >-
                                      The total number of Murphy-style beds in
                                      the room
                                  sofa_beds:
                                    type: integer
                                    example: 1
                                    description: >-
                                      The total number of convertible sofa beds
                                      in the room
                                  bunk_beds:
                                    type: integer
                                    example: 0
                                    description: The total number of bunk beds in the room
                                  other_beds:
                                    type: integer
                                    example: 0
                                    description: Any other type of beds in the room
                              total_base_rate:
                                type: object
                                properties:
                                  amount:
                                    type: integer
                                    example: 1923.47
                                  currency:
                                    type: string
                                    example: USD
                              total_tax_rate:
                                type: object
                                properties:
                                  amount:
                                    type: integer
                                    example: 269.04
                                  currency:
                                    type: string
                                    example: USD
                              total:
                                type: object
                                properties:
                                  amount:
                                    type: integer
                                    example: 2192.51
                                  currency:
                                    type: string
                                    example: USD
                              rate_type:
                                type: string
                                example: BOOKEABLE
                              avg_nightly_rate:
                                type: object
                                properties:
                                  amount:
                                    type: integer
                                    example: 730.84
                                  currency:
                                    type: string
                                    example: USD
                              cancellation_policy:
                                type: object
                                properties:
                                  summary:
                                    type: string
                                    example: FREE_CANCELLATION
                                  cancellation_deadline:
                                    type: string
                                    example: '2021-10-25'
                                  unstructured_policies:
                                    type: string
                                    description: Textual description of hotel rate policies
                                    example: >-
                                      Any cancellation received within 3 days
                                      prior to arrival date will incur the first
                                      night charge.
                              daily_rates:
                                type: number
                                description: >-
                                  The minimum total daily rate.  Equal to
                                  minimum rate total / room_days
                                example: 181.9
                              unstructured_policies:
                                type: string
                                description: Textual description of hotel rate policies
                              postpaid_fees:
                                type: object
                                properties:
                                  total:
                                    type: object
                                    properties:
                                      amount:
                                        type: number
                                        example: 52.41
                                      currency:
                                        type: string
                                        example: USD
                                  fees:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        amount:
                                          type: object
                                          properties:
                                            amount:
                                              type: number
                                              example: 52.41
                                            currency:
                                              type: string
                                              example: USD
                                        type:
                                          type: string
                                          example: UNKNOWN_FEES
                                        description:
                                          type: string
                                          example: FEE
                        average_nightly_rate:
                          type: number
                          description: >-
                            The minimum total nightly rate.  Equal to minimum
                            rate total / room_nights
                          example: 730.84
                        average_nightly_base:
                          type: number
                          description: >-
                            The minimum total nightly taxes.  Equal to the
                            minimum base total / room_nights
                          example: 641.16
                        average_nightly_tax:
                          type: number
                          description: >-
                            The minimum total nightly taxes.  Equal to the
                            minimum tax total / room_nights
                          example: 89.69
                        error:
                          required:
                            - type
                            - message
                          properties:
                            type:
                              type: object
                              enum:
                                - UNKNOWN_ERROR: null
                                - API_VERSION_UNSUPPORTED: null
                                - DATE_SELECTION_INVALID: null
                                - HOTEL_NOT_FOUND: null
                                - NETWORK_ERROR: null
                                - RECOVERABLE_ERROR: null
                                - REQUEST_DATA_INVALID: null
                                - REQUEST_INCOMPLETE: null
                                - REQUEST_NOT_PARSABLE: null
                                - SUPPLIER_ERROR: null
                            message:
                              type: string
                              example: Error while searching hotel supplier
                              description: Unstructed, detailed error message
  //multi/hotel-details:
    post:
      tags:
        - MultiHotel
      summary: Get details of a specific hotel
      description: >
        Using the parameters *hotel_id* (obtained from */multi/search*
        endpoint), *start_date*, *end_date*, and *occupancy* (that contains
        *adults*, *children* and *num_rooms*).


        Steps: 


        1. From the search endpoint response define hotel_id for hotel_detail. 


        2. Post to the API URL given, complete the fields for hotel_detail
        complete the fields hotel_id, start_date, end_date and occupancy
        (adults, children and num_rooms) 


        3. The response will bring an object with the parameters hotel_results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Parameters to get details for a hotel.
              properties:
                hotel_id:
                  type: string
                  example: '16750'
                  description: Hotel ID obtained from /multi/search endpoint response.
                start_date:
                  type: string
                  format: date
                  description: The checkin date
                  example: '2021-10-28'
                end_date:
                  type: string
                  format: date
                  description: The checkout date
                  example: '2021-10-31'
                occupancy:
                  type: object
                  properties:
                    adults:
                      type: number
                      description: The amount of adults guests
                      example: 2
                    children:
                      type: number
                      description: The amount of children guests
                      example: 0
                    num_rooms:
                      type: number
                      description: The amount of rooms the guests need.
                      example: 1
      responses:
        '200':
          description: List of matching hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - hotel_id
                    - start_date
                    - end_date
                    - occupancy
                    - room_types
                    - rate_plans
                    - room_rates
                    - hotel_details
                    - average_nightly_rate
                    - average_nightly_tax
                    - average_nightly_base
                  properties:
                    hotel_id:
                      type: string
                      example: '16750'
                      description: A SimpleNights Hotel ID
                    start_date:
                      type: string
                      format: date
                      example: '2021-10-28'
                      description: Checkin date
                    end_date:
                      type: string
                      format: date
                      example: '2021-10-31'
                      description: Checkout date
                    hotel_details:
                      type: object
                      required:
                        - name
                        - address
                      properties:
                        name:
                          type: string
                          description: Name of the hotel
                          example: Four Seasons Hotel San Francisco at Embarcadero
                        address:
                          required:
                            - address1
                            - city
                            - province
                            - postal_code
                            - country
                          properties:
                            city:
                              type: string
                              description: The city of the hotel
                              example: San Francisco
                            province:
                              type: string
                              description: The administrative region of the city
                              example: CA
                            country:
                              type: string
                              description: ISO-format two-character country code
                              example: US
                            address1:
                              type: string
                              example: 222 Sansome Street
                              description: The first line of the address.  Required.
                            address2:
                              type: string
                              example: 1st Floor
                              description: The second line of the address.  Optional.
                            address3:
                              type: string
                              example: Reception
                              description: The third line of the address.  Optional.
                            postal_code:
                              type: string
                              example: CA 94104
                              description: The postal code of the hotel
                        hotel_code:
                          type: string
                          description: The code for the hotel
                          example: '700256832'
                        checkin_time:
                          type: string
                          description: The time of the checkin
                          example: '15:00'
                        checkout_time:
                          type: string
                          description: The time of the checkout
                          example: '12:00'
                        photos:
                          type: array
                          items:
                            type: object
                            required:
                              - url
                              - type
                              - display_order
                            properties:
                              url:
                                type: string
                                example: >-
                                  https://q-xx.bstatic.com/xdata/images/hotel/max2000/268538679.jpg?k=88c6c50315703584977c228c619a140611b9eb45db92f28bf61125a9dfd37e7b&o=
                                description: Hotel image URL.  Always in HTTPS.
                              type:
                                type: string
                                example: exterior
                                description: The type of hotel image being returned
                              display_order:
                                type: integer
                                example: 1
                                description: >-
                                  A suggested order to display the images,
                                  beginning with 1
                        amenities:
                          type: array
                          description: The amenities the hotel have to offer
                          items:
                            type: string
                          example:
                            - Pool
                            - Parking
                            - Spa
                            - Laundry Services
                            - Hot Tub
                            - Bar
                            - Health Club or Gym
                            - Restaurant
                            - Sauna
                        thumbnail_url:
                          type: string
                          example: >-
                            //mobileimg.priceline.com/htlimg/35/3505105/thumbnail-300-square.jpg
                          description: Hotel thumbnail image URL
                        geolocation:
                          type: object
                          required:
                            - latitude
                            - longitude
                          properties:
                            latitude:
                              type: number
                              example: '37.792325'
                            longitude:
                              type: number
                              example: '-122.400942'
                        phone_number:
                          type: string
                          example: +1 (555)-867-5309
                          description: Hotel phone number
                        email:
                          type: string
                          example: frontdesk@hotel.com
                          format: email
                          description: The hotel email address
                        homepage_url:
                          type: string
                          example: https://www.foobazhotel.com/
                          description: URL to the website's homepage
                        chain_code:
                          type: string
                          example: FS
                          description: Hotel chain code
                        chain_name:
                          type: string
                          example: Four Seasons
                          description: Hotel chain name
                        star_rating:
                          type: number
                          format: float
                          example: 5
                        review_rating:
                          type: number
                          format: float
                          example: 9.8
                        property_description:
                          type: string
                          example: >-
                            Featuring stunning views of downtown San Francisco
                            from each spacious guestroom, Four Seasons Hotel San
                            Francisco at Embarcadero offers gourmet on-site
                            dining, in-room massage services and easy access to
                            sites such as Chinatown, 7 minutes’ walk away.
                            Featuring free WiFi, each air-conditioned room at
                            Four Seasons Hotel San Francisco at Embarcadero
                            combines timeless design with modern amenities such
                            as flat-screen TVs and iPod docking stations. With
                            rooms located on the top 11 floors of a 48-story
                            tower, the hotel offers breathtaking views of San
                            Francisco. In-room dining is available to guests
                            from 6:00 to 22:00. Guests of Four Seasons Hotel San
                            Francisco at Embarcadero can start the day with a
                            workout in the 24-hour fitness centre or enjoy a
                            yoga class. Offering unique shops, restaurants and
                            nightlife, vibrant Union Square is 12 minutes’ walk
                            away from this hotel. Offering service to San
                            Francisco International Airport, Embarcadero BART
                            (Bay Area Rapid Transit) station is 6 minutes’ walk
                            away.
                          description: Description of the hotel property
                    occupancy:
                      type: object
                      properties:
                        adults:
                          type: number
                          description: The amount of adults guests
                          example: 2
                        children:
                          type: number
                          description: The amount of children guests
                          example: 0
                        num_rooms:
                          type: number
                          description: The amount of rooms the guests need.
                          example: 1
                    room_types:
                      type: array
                      items:
                        type: object
                        description: The types of physical rooms available
                        required:
                          - code
                          - name
                        properties:
                          code:
                            type: string
                            description: The unique ID for the room type
                            example: eab21164
                          name:
                            type: string
                            description: The descriptive name for the room type
                            example: City View - Deluxe King
                          description:
                            type: string
                            description: The long description of the room type
                            example: City View - Deluxe King.
                          amenities:
                            type: array
                            items:
                              type: string
                            example:
                              - Minibar
                              - Free wifi
                          photos:
                            type: array
                            items:
                              type: object
                              required:
                                - url
                                - type
                                - display_order
                              properties:
                                url:
                                  type: string
                                  example: >-
                                    https://q-xx.bstatic.com/xdata/images/hotel/max2000/165679674.jpg?k=96f777057b9d53a3d1561f4a9c440850baee267301757b64c03df79052a005a1&o=
                                  description: Hotel room image URL.  Always in HTTPS.
                                type:
                                  type: string
                                  example: interior
                                  description: The type of hotel image being returned
                                display_order:
                                  type: integer
                                  example: 1
                                  description: >-
                                    A suggested order to display the images,
                                    beginning with 1
                          capacity:
                            type: object
                            properties:
                              adults:
                                type: number
                                description: The amount of adults guests
                                example: 2
                              children:
                                type: number
                                description: The amount of children guests
                                example: 0
                              num_rooms:
                                type: number
                                description: The amount of rooms the guests need.
                                example: 1
                          bed_types:
                            type: object
                            description: The number and type of beds available in the room
                            properties:
                              total_beds:
                                type: integer
                                example: 1
                                description: The total number of beds in the room
                              king_beds:
                                type: integer
                                example: 1
                                description: >-
                                  The total number of king-sized beds in the
                                  room
                              queen_beds:
                                type: integer
                                example: 0
                                description: >-
                                  The total number of queen-sized beds in the
                                  room
                              double_beds:
                                type: integer
                                example: 0
                                description: The total number of double beds in the room
                              single_or_twin_beds:
                                type: integer
                                example: 0
                                description: >-
                                  The total number of single-sized beds in the
                                  room
                              murphy_beds:
                                type: integer
                                example: 0
                                description: >-
                                  The total number of Murphy-style beds in the
                                  room
                              sofa_beds:
                                type: integer
                                example: 1
                                description: >-
                                  The total number of convertible sofa beds in
                                  the room
                              bunk_beds:
                                type: integer
                                example: 0
                                description: The total number of bunk beds in the room
                              other_beds:
                                type: integer
                                example: 0
                                description: Any other type of beds in the room
                          total_base_rate:
                            type: object
                            properties:
                              amount:
                                type: integer
                                example: 1923.47
                              currency:
                                type: string
                                example: USD
                          total_tax_rate:
                            type: object
                            properties:
                              amount:
                                type: integer
                                example: 269.04
                              currency:
                                type: string
                                example: USD
                          total:
                            type: object
                            properties:
                              amount:
                                type: integer
                                example: 2192.51
                              currency:
                                type: string
                                example: USD
                          rate_type:
                            type: string
                            example: BOOKEABLE
                          avg_nightly_rate:
                            type: object
                            properties:
                              amount:
                                type: integer
                                example: 730.84
                              currency:
                                type: string
                                example: USD
                          cancellation_policy:
                            type: object
                            properties:
                              summary:
                                type: string
                                example: FREE_CANCELLATION
                              cancellation_deadline:
                                type: string
                                example: '2021-10-25'
                              unstructured_policies:
                                type: string
                                description: Textual description of hotel rate policies
                                example: >-
                                  Any cancellation received within 3 days prior
                                  to arrival date will incur the first night
                                  charge.
                          daily_rates:
                            type: number
                            description: >-
                              The minimum total daily rate.  Equal to minimum
                              rate total / room_days
                            example: 181.9
                          unstructured_policies:
                            type: string
                            description: Textual description of hotel rate policies
                          postpaid_fees:
                            type: object
                            properties:
                              total:
                                type: object
                                properties:
                                  amount:
                                    type: number
                                    example: 52.41
                                  currency:
                                    type: string
                                    example: USD
                              fees:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    amount:
                                      type: object
                                      properties:
                                        amount:
                                          type: number
                                          example: 52.41
                                        currency:
                                          type: string
                                          example: USD
                                    type:
                                      type: string
                                      example: UNKNOWN_FEES
                                    description:
                                      type: string
                                      example: FEE
                    average_nightly_rate:
                      type: number
                      description: >-
                        The minimum total nightly rate.  Equal to minimum rate
                        total / room_nights
                      example: 730.84
                    average_nightly_base:
                      type: number
                      description: >-
                        The minimum total nightly taxes.  Equal to the minimum
                        base total / room_nights
                      example: 641.16
                    average_nightly_tax:
                      type: number
                      description: >-
                        The minimum total nightly taxes.  Equal to the minimum
                        tax total / room_nights
                      example: 89.69
                    error:
                      required:
                        - type
                        - message
                      properties:
                        type:
                          type: object
                          enum:
                            - UNKNOWN_ERROR: null
                            - API_VERSION_UNSUPPORTED: null
                            - DATE_SELECTION_INVALID: null
                            - HOTEL_NOT_FOUND: null
                            - NETWORK_ERROR: null
                            - RECOVERABLE_ERROR: null
                            - REQUEST_DATA_INVALID: null
                            - REQUEST_INCOMPLETE: null
                            - REQUEST_NOT_PARSABLE: null
                            - SUPPLIER_ERROR: null
                        message:
                          type: string
                          example: Error while searching hotel supplier
                          description: Unstructed, detailed error message
  //multi/hotel-price-verification:
    post:
      tags:
        - MultiHotel
      summary: Get details of the price of a specific hotel room
      description: >
        Using the parameters *hotel_id* and *room_code* (both obtained from */multi/search*
        endpoint).


        Steps: 


        1. From the search endpoint response define *hotel_id* and *room_code*. 


        2. Post to the API URL given, complete the fields for *hotel_id* and *room_code*.


        3. The response will bring an object with the *rooms* array with the parameters: *hotel_id*,
        *room_code*, *error*, *message*, *room_rate* (with *code*, *room_type_code*, *maximum_allowed_occupancy*,
        *total_base_rate*, *total_tax_rate*, *total*, *rate_type*, *daily_rates*, *postpayd_fees*, *partner_data*,
        *markup_applicable* and *inventory_type*).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Parameters to get details for a hotel.
              properties:
                rooms:
                  type: array
                  description: Array with price information of the room
                  items:
                    type: object
                    properties:
                      hotel_id:
                        type: string
                        example: "16750"
                        description: hotel_id from search response
                      room_code:
                        type: string
                        example: "eab21164"
                        description: code in room_types array from search response
      responses:
        '200':
          description: Information of room rates
          content:
            application/json:
              schema:
                type: object
                properties:
                  rooms:
                    type: array
                    items:
                      type: object
                      description: Information of the selected room
                      properties:
                        hotel_id:
                          type: string
                          example: "16750"
                        room_code:
                          type: string
                          example: "eab21164"
                        error:
                          type: boolean
                          example: false
                        message:
                          type: string
                          example: null
                        room_rate:
                          type: object
                          properties:
                            code:
                              type: string
                              description: Room code
                              example: "eab21164"
                            room_type_code:
                              type: string
                              example: "SnpcwBG57WrwlPMdz9no_tkv8C3neD6sfgrY6grNVxg"
                            rate_plan_code:
                              type: string
                              example: "771478_MERCHANT_MERCHANT__21eda21c-8270-f296-3f75-7cfebb727186"
                            maximum_allowed_occupancy:
                              type: object
                              properties:
                                adults:
                                  type: number
                                  example: 2
                                children:
                                  type: number
                                  example: 0
                                num_rooms:
                                  type: number
                                  example: 1
                            total_base_rate:
                              type: object
                              properties:
                                amount:
                                  type: number
                                  example: 1923.47
                                currency:
                                  type: string
                                  example: "USD"
                            total_tax_rate:
                              type: object
                              properties:
                                amount:
                                  type: integer
                                  example: 269.04
                                currency:
                                  type: string
                                  example: USD
                            total:
                              type: object
                              properties:
                                amount:
                                  type: integer
                                  example: 2192.51
                                currency:
                                  type: string
                                  example: USD
                            rate_type:
                              type: string
                              example: BOOKEABLE
                            daily_rates:
                              type: number
                              description: "The minimum total daily rate.  Equal to minimum
                              rate total / room_days"
                              example: 181.9
                            postpaid_fees:
                              type: object
                              properties:
                                total:
                                  type: object
                                  properties:
                                    amount:
                                      type: number
                                      example: 52.41
                                    currency:
                                      type: string
                                      example: USD
                                fees:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      amount:
                                        type: object
                                        properties:
                                          amount:
                                            type: number
                                            example: 52.41
                                          currency:
                                            type: string
                                            example: USD
                                      type:
                                        type: string
                                        example: UNKNOWN_FEES
                                      description:
                                        type: string
                                        example: FEE
                            parter_data:
                              type: string
                              example: null
                            markup_applicable:
                              type: boolean
                              example: true
                            inventory_type:
                              type: string
                              example: "priceline"
  //multi/book:
    post:
      tags:
        - MultiHotel
      summary: Submit a booking request and receive a Reservation in response.
      description: >
        Collect a customer record, payment information and itinerary for booking
        and return a Reservation on success.


        Steps:


        1. For the booking endpoint it is necessary to declare a
        *transaction_id*, this is an arbitrary string used to identify a request
        and prevent duplicate bookings; *room_type* and *provider_rate* (this last parameter info is obtained from the */multi/hotel-price-verification* endpoint response). Also, customer, traveler and billing
        address information must be provided by the user. Payment information is
        provided by the payment service.


        2. Post to the API URL given, please follow the example in the
        parameters section.


        3. The response will return an object with the information of the
        booking, including the fields *status*, *booking_id*,
        *booking_reference*, *total_retail_price*, *total_retail_tax*,
        *payment_information* and *hotel_reservation*.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Booking request.
              properties:
                api_version:
                  type: integer
                  example: 1
                  description: The API version of the request
                transaction_id:
                  type: string
                  format: uuid
                  description: >-
                    Arbitrary string used to identify a request, and prevent
                    duplicate bookings
                language:
                  type: string
                  description: a locale string for the customer
                  example: en_US
                customer:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Smith
                    phone_number:
                      type: string
                      example: '15558675309'
                    email:
                      type: string
                      example: smith@mail.com
                    country:
                      type: string
                      example: US
                traveler:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Smith
                    occupancy:
                      type: object
                      properties:
                        adults:
                          type: number
                          description: The amount of adults guests
                          example: 2
                        children:
                          type: number
                          description: The amount of children guests
                          example: 0
                        num_rooms:
                          type: number
                          description: The amount of rooms the guests need.
                          example: 1
                payment:
                  type: object
                  properties:
                    payment_method:
                      type: string
                      example: PAYMENT_TOKEN
                    payment_token:
                      type: string
                      example: cnon:card-nonce-ok
                    buyer_verification_token:
                      type: string
                      example: stringtoken
                    billing_address:
                      type: object
                      properties:
                        address1:
                          type: string
                          example: 5554 W 9th St
                        address2:
                          type: string
                          example: null
                        address3:
                          type: string
                          example: null
                        city:
                          type: string
                          example: Los Angeles
                        province:
                          type: string
                          example: CA
                        postal_code:
                          type: string
                          example: CA 90036
                        country:
                          type: string
                          example: US
                hotel_booking:
                  type: array
                  title: Hotels
                  description: >
                    Array of Hotel items to be booked - must follow the given
                    structure
                  items:
                    type: object
                    properties:
                      hotel_id:
                        type: string
                        example: '16750'
                      room_type:
                        type: object
                        description: The types of physical rooms available
                        required:
                          - code
                          - name
                        properties:
                          code:
                            type: string
                            description: The unique ID for the room type
                            example: eab21164
                          name:
                            type: string
                            description: The descriptive name for the room type
                            example: City View - Deluxe King
                      provider_rate:
                        type: object
                        properties:
                            code:
                              type: string
                              description: Room code
                              example: "eab21164"
                            total:
                              type: object
                              properties:
                                amount:
                                  type: integer
                                  example: 2192.51
                                currency:
                                  type: string
                                  example: USD
                            rate_type:
                              type: string
                              example: BOOKEABLE
                additional_info:
                  type: string
                  description: Additional information for booking request
                  example: Twin bed please
      responses:
        '200':
          description: Reservation on success, or else an Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_version:
                    type: integer
                    example: 1
                    description: The API version of the response
                  transaction_id:
                    type: string
                    format: uuid
                    description: The echoed transaction ID from the booking request
                    example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  status:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: success
                  booking_id:
                    type: string
                    description: The Simplenight Record Locator for the completed booking
                    example: H5W5W7QW
                  booking_reference:
                    type: number
                    example: 2.1160470204808192e+38
                  total_retail_price:
                    type: object
                    properties:
                      amount:
                        type: number
                        example: 2192.51
                      currency:
                        type: string
                        example: USD
                  total_retail_tax:
                    type: object
                    properties:
                      amount:
                        type: number
                        example: 269.04
                      currency:
                        type: string
                        example: USD
                  payment_information:
                    type: object
                    properties:
                      card_brand:
                        type: string
                        example: VISA
                      last_four_digits:
                        type: number
                        example: '5858'
                  hotel_reservation:
                    type: array
                    items:
                      type: object
                      description: The booking response for a successful booking
                      required:
                        - api_version
                        - transaction_id
                        - status
                        - reservation
                      properties:
                        locator:
                          type: object
                          properties:
                            id:
                              type: number
                              example: 83492619743
                            pin:
                              type: number
                              example: 174225
                        hotel_locator:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: CONF0
                              pin:
                                type: string
                                example: null
                        hotel_id:
                          type: string
                          example: '16750'
                        checkin:
                          type: string
                          example: '2021-10-28'
                        checkout:
                          type: string
                          example: '2021-10-31'
                        customer:
                          type: object
                          properties:
                            first_name:
                              type: string
                              example: John
                            last_name:
                              type: string
                              example: Smith
                            phone_number:
                              type: string
                              example: '15558675309'
                            email:
                              type: string
                              example: smith@mail.com
                            country:
                              type: string
                              example: US
                        traveller:
                          type: object
                          properties:
                            first_name:
                              type: string
                              example: John
                            last_name:
                              type: string
                              example: Smith
                            occupancy:
                              type: object
                              properties:
                                adults:
                                  type: number
                                  description: The amount of adults guests
                                  example: 2
                                children:
                                  type: number
                                  description: The amount of children guests
                                  example: 0
                                num_rooms:
                                  type: number
                                  description: The amount of rooms the guests need.
                                  example: 1
                        room_rate:
                          type: object
                          required:
                            - code
                            - room_type_code
                            - rate_plan_code
                          properties:
                            code:
                              type: string
                              example: eab21164
                              description: The unique identifier for a room rate plan
                            room_type_code:
                              type: string
                              example: y2VXgZvcx3ic2MShBTBjtA
                              description: The associated unique identifer for a room type
                            rate_plan_code:
                              type: string
                              example: >-
                                1523068_MERCHANT_MERCHANT__0f415631-972f-e559-f4ed-e10dbf12da62
                              description: The associated unique identifier for a rate plan
                            maximum_allowable_occupancy:
                              type: object
                              properties:
                                adults:
                                  type: number
                                  description: The amount of adults guests
                                  example: 2
                                children:
                                  type: number
                                  description: The amount of children guests
                                  example: 0
                                num_rooms:
                                  type: number
                                  description: The amount of rooms the guests need.
                                  example: 1
                            total_base_rate:
                              type: object
                              properties:
                                amount:
                                  type: number
                                  example: 1923.47
                                currency:
                                  type: string
                                  example: USD
                            total_tax_rate:
                              type: object
                              properties:
                                amount:
                                  type: number
                                  example: 269.04
                                currency:
                                  type: string
                                  example: USD
                            total:
                              type: object
                              properties:
                                amount:
                                  type: number
                                  example: 2192.51
                                currency:
                                  type: string
                                  example: USD
                            rate_type:
                              type: string
                              example: BOOKEABLE
                            daily_rates:
                              type: string
                              example: null
                            postpaid_fees:
                              type: string
                              example: null
                            partner_data:
                              type: string
                              example: null
                            markup_applicable:
                              type: boolean
                              example: true
                            inventory_type:
                              type: string
                              example: priceline
                        itinerary:
                          type: object
                          properties:
                            address:
                              required:
                                - address1
                                - city
                                - province
                                - postal_code
                                - country
                              properties:
                                city:
                                  type: string
                                  description: The city of the hotel
                                  example: San Francisco
                                province:
                                  type: string
                                  description: The administrative region of the city
                                  example: CA
                                country:
                                  type: string
                                  description: ISO-format two-character country code
                                  example: US
                                address1:
                                  type: string
                                  example: 222 Sansome Street
                                  description: The first line of the address.  Required.
                                address2:
                                  type: string
                                  example: 1st Floor
                                  description: The second line of the address.  Optional.
                                address3:
                                  type: string
                                  example: Reception
                                  description: The third line of the address.  Optional.
                                postal_code:
                                  type: string
                                  example: CA 94104
                                  description: The postal code of the hotel
                            confirmation:
                              type: string
                              example: '83492619743'
                            start_date:
                              type: string
                              example: '2021-10-28'
                            display_start_date:
                              type: string
                              example: Thu, Oct 28 2021
                            end_date:
                              type: string
                              example: '2021-10-31'
                            display_end_date:
                              type: string
                              example: Sun, Oct 31 2021
                            name:
                              type: string
                              example: Four Seasons Hotel San Francisco at Embarcadero
                            price:
                              type: object
                              properties:
                                amount:
                                  type: number
                                  example: 2192.51
                                currency:
                                  type: string
                                  example: USD
                            resortFee:
                              type: object
                              properties:
                                amount:
                                  type: number
                                  example: 145.35
                                currency:
                                  type: string
                                  example: USD
                        hotel_address:
                          type: string
                          example: 222 Sansome Street
                        provider_id:
                          type: string
                          default: null
                        room_type_name:
                          type: string
                          example: City View - Deluxe King
                        cancellation_details:
                          type: array
                          items:
                            properties:
                              begin_date:
                                type: string
                                example: '2021-10-28'
                              cancellation_type:
                                type: string
                                example: FREE_CANCELLATION
                              description:
                                type: string
                                example: Free cancellation until 2021-10-25
                              display_begin_date:
                                type: string
                                default: null
                              display_end_date:
                                type: string
                                default: null
                              end_date:
                                type: string
                                example: '2021-10-31'
                              penalty_amount:
                                type: number
                                example: 0
                              penalty_currency:
                                type: string
                                example: USD
                              refund_amount:
                                type: number
                                example: null
                              refund_currency:
                                type: number
                                example: null
  //multi/cancel:
    post:
      tags:
        - MultiHotel
      summary: Cancel a booking
      description: >
        Using the parameters *booking_id* (obtained from */multi/book* endpoint)
        and *last_name* from the customer.


        Steps: 


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response.


        2. Post to the API URL given, completing the fields booking_id and
        last_name.


        3. The response is an object with the information of the cancellation,
        including the field is_cancellable that indicates if the cancellation
        can be done.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Parameters to preview cancel a booking.
              properties:
                booking_id:
                  type: string
                  description: >-
                    Simplenight booking id provided after booking completion on
                    email or in order summary
                  example: H5W5W7QW
                last_name:
                  type: string
                  description: >-
                    Last name used to fill the primary contact details  while
                    placing the booking
                  example: Smith
      responses:
        '200':
          description: Preview cancellation details
          content:
            application/json:
              schema:
                type: object
                description: |
                  Parameters of the preview cancellation details.
                properties:
                  booking_id:
                    type: string
                    example: H5W5W7QW
                  total_price:
                    type: number
                    format: double
                    example: 2192.51
                  total_tax:
                    type: number
                    format: double
                    example: 269.04
                  currency:
                    type: string
                    default: USD
                    description: currency at the time of checkout
                  itinerary:
                    type: object
                    properties:
                      hotels:
                        type: array
                        items:
                          type: object
                          properties:
                            is_cancellable:
                              type: boolean
                              example: true
                            booking_status:
                              type: string
                              example: booked
                            hotel_booking_id:
                              type: string
                              example: ffb1c6ca-7bf6-41c8-84b8-2c69f6e57e16
                            itinerary:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: >-
                                    Four Seasons Hotel San Francisco at
                                    Embarcadero
                                price:
                                  type: object
                                  properties:
                                    amount:
                                      type: number
                                      example: 2192.51
                                    currency:
                                      type: string
                                      example: USD
                                confirmation:
                                  type: string
                                  example: '83492619743'
                                tax:
                                  type: object
                                  properties:
                                    amount:
                                      type: number
                                      example: 269.04
                                    currency:
                                      type: string
                                      example: USD
                                start_date:
                                  type: string
                                  example: '2021-10-28'
                                display_start_date:
                                  type: string
                                  example: Thu, Oct 28 2021
                                end_date:
                                  type: string
                                  example: '2021-10-31'
                                display_end_date:
                                  type: string
                                  example: Sun, Oct 31 2021
                                address:
                                  type: object
                                  required:
                                    - address1
                                    - city
                                    - province
                                    - postal_code
                                    - country
                                  properties:
                                    city:
                                      type: string
                                      description: The city of the hotel
                                      example: San Francisco
                                    province:
                                      type: string
                                      description: The administrative region of the city
                                      example: CA
                                    country:
                                      type: string
                                      description: ISO-format two-character country code
                                      example: US
                                    address1:
                                      type: string
                                      example: 222 Sansome Street
                                      description: >-
                                        The first line of the address. 
                                        Required.
                                    address2:
                                      type: string
                                      example: 1st Floor
                                      description: >-
                                        The second line of the address. 
                                        Optional.
                                    address3:
                                      type: string
                                      example: Reception
                                      description: >-
                                        The third line of the address. 
                                        Optional.
                                    postal_code:
                                      type: string
                                      example: CA 94104
                                      description: The postal code of the hotel
                                room_type_name:
                                  type: string
                                  example: City View - Deluxe King
                                resortFee:
                                  type: object
                                  properties:
                                    amount:
                                      type: number
                                      example: 145.35
                                    currency:
                                      type: string
                                      example: USD
  //multi/cancel-confirm:
    post:
      tags:
        - MultiHotel
      summary: Confirm the cancellation of a booking
      description: >
        Using the parameters *booking_id* (obtained from */multi/book*
        endpoint), *last_name* from the customer and *hotel_booking_id*
        (obtained from */multi/cancel* endpoint).


        Steps:


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response. Also
        hotel_booking_id, activity_booking_id and/or dining_booking_id when
        those services were booked and cancelled, the ids are from the
        multiproduct booking endpoint response.


        2. Post to the API URL given, completing the mandatory fields booking_id
        and last_name, and, if corresponds, the fields hotel_booking_id,
        activity_booking_id and/or dining_booking_id.


        3. The response is an object with the information of the cancellation,
        including the fields booking_id, record_locator, booking_status,
        cancelled and amount_refunded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Parameters to preview cancel a booking.
              properties:
                booking_id:
                  type: string
                  description: >-
                    Simplenight booking id provided after booking completion on
                    email or in order summary
                  example: H5W5W7QW
                last_name:
                  type: string
                  description: >-
                    Last name used to fill the primary contact details  while
                    placing the booking
                  example: Smith
                hotel_booking_id:
                  type: string
                  description: Booking id for the hotel booking
                  example: ffb1c6ca-7bf6-41c8-84b8-2c69f6e57e16
      responses:
        '200':
          description: Preview cancellation details
          content:
            application/json:
              schema:
                type: object
                description: |
                  Parameters of the preview cancellation details.
                properties:
                  booking_id:
                    type: string
                    example: ffb1c6ca-7bf6-41c8-84b8-2c69f6e57e16
                  record_locator:
                    type: string
                    example: H5W5W7QW
                  booking_status:
                    type: string
                    example: cancelled
                  cancelled:
                    type: boolean
                    example: true
                  amount_refunded:
                    type: number
                    example: 2192.51
  ///multi/search:
    post:
      tags:
        - MultiDining
      summary: Search for available dining
      description: >
        Using the parameters *latitude* and *longitude* (obtained from
        */location/cities* endpoint), *current_page* (positioning in the search)
        , *page_page* (amount of items per page), *date*, *covers* and *time*.


        Steps:


        1. Define location_id as location_id indicates in locations endpoint for
        the desired location.


        2. Post to the API URL given, complete the fields for product_types as
        “dining”. For dining_search include covers, current_page, per_page,
        latitude, longitude, time and date.


        3. The response will bring an object with dining_results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: >
                Parameters to search for dining.  Will return all dining
                available on the date given.
              properties:
                product_types:
                  type: array
                  items:
                    example:
                      - dining
                dining_search:
                  type: object
                  title: Hotel search request
                  required:
                    - location_id
                    - start_date
                    - end_date
                    - occupancy
                  properties:
                    latitude:
                      type: number
                      example: 37.7878
                    longitude:
                      type: number
                      example: -122.4075
                    current_page:
                      type: number
                      example: 1
                    page_page:
                      type: number
                      example: 20
                    date:
                      type: string
                      format: date
                      description: The checkin date
                      example: '2021-10-29'
                    covers:
                      type: number
                      example: 2
                    time:
                      type: string
                      example: '18:00'
      responses:
        '200':
          description: List of matching dinings
          content:
            application/json:
              schema:
                type: object
                properties:
                  dining_results:
                    type: object
                    properties:
                      ok:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: success
                        description: If the request is fulfilled
                      total:
                        type: number
                        example: 240
                        default: 0
                      data:
                        type: object
                        description: Dining adapter response
                        properties:
                          dining_id:
                            type: string
                            example: 5D71_0GNtJiAbu-hivtA6g
                          name:
                            type: string
                            example: Persona
                          image:
                            type: string
                            example: >-
                              https://s3-media2.fl.yelpcdn.com/bphoto/SmomvmcufbFdh6VrPeQBPw/o.jpg
                          rating:
                            type: number
                            example: 5
                          review_count:
                            type: number
                            example: 21
                          price:
                            type: string
                            example: $$
                          categories:
                            type: array
                            items:
                              type: string
                              example:
                                - Cocktail Bars
                                - Venues & Event Spaces
                                - Lounges
                          location:
                            type: object
                            properties:
                              latitude:
                                type: string
                                example: '37.78875'
                              longitude:
                                type: string
                                example: '-122.41146'
                              address:
                                type: string
                                example: 685 Sutter St, San Francisco, CA 94102
                          phone:
                            type: string
                            example: '+14154004598'
                          openings:
                            type: array
                            items:
                              type: string
                              example:
                                - '17:30'
                                - '17:45'
                                - '18:00'
                                - '18:15'
  ///multi/detail:
    post:
      tags:
        - MultiDining
      summary: Detail of a specific dining place
      description: >
        Using the parameter *dining_id* from */multi/search* response.


        Steps:


        1. Define dining_id as dining_id indicates in search endpoint for the
        desired dining place.


        2. Post to the API URL given, complete the fields for dining_id.


        3. The response will bring an object with dining_results object nested.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                Parameters of information for dining.
              properties:
                dining_detai:
                  type: object
                  properties:
                    dining_id:
                      type: string
                      example: 5D71_0GNtJiAbu-hivtA6g
      responses:
        '200':
          description: Detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  dining_result:
                    type: object
                    properties:
                      dining_id:
                        type: string
                        example: 5D71_0GNtJiAbu-hivtA6g
                      name:
                        type: string
                        example: Persona
                      rating:
                        type: number
                        example: 5
                      phone:
                        type: string
                        example: '+14154004598'
                      images:
                        type: array
                        items:
                          type: string
                          example:
                            - >-
                              https://s3-media2.fl.yelpcdn.com/bphoto/SmomvmcufbFdh6VrPeQBPw/o.jpg
                            - >-
                              https://s3-media4.fl.yelpcdn.com/bphoto/dx7jhxrBFEOyxXSOSwwgtQ/o.jpg
                            - >-
                              https://s3-media2.fl.yelpcdn.com/bphoto/rW2gDl7thVHH_ttydksv0Q/o.jpg
                      location:
                        type: object
                        properties:
                          latitude:
                            type: string
                            example: '37.78875'
                          longitude:
                            type: string
                            example: '-122.41146'
                          address:
                            type: string
                            example: 685 Sutter St, San Francisco, CA 94102
                      is_closed:
                        type: boolean
                        example: false
                      review_count:
                        type: number
                        example: 21
                      display_phone:
                        type: string
                        example: (415) 400-4598
                      categories:
                        type: array
                        items:
                          type: string
                          example:
                            - Cocktail Bars
                            - Venues & Event Spaces
                            - Lounges
                      price:
                        type: string
                        example: $$
                      hours:
                        type: array
                        items:
                          example:
                            - open:
                                - is_overnight: true
                                  start: '1600'
                                  end: '0200'
                                  day: 1
                                - is_overnight: true
                                  start: '1600'
                                  end: '0200'
                                  day: 2
                                - is_overnight: true
                                  start: '1600'
                                  end: '0200'
                                  day: 3
                                - is_overnight: true
                                  start: '1600'
                                  end: '0200'
                                  day: 4
                                - is_overnight: true
                                  start: '1600'
                                  end: '0200'
                                  day: 5
                              hours_type: REGULAR
                              is_open_now: true
  ///multi/book:
    post:
      tags:
        - MultiDining
      summary: Book a dining
      description: >
        Collect a customer record, payment information and itinerary for booking
        and return a Reservation on success.


        Steps:


        1. For the booking endpoint it is necessary to declare a transaction_id,
        this is an arbitrary string used to identify a request and prevent
        duplicate bookings; likewise it is necessary to declare an unique
        user_id for a dining booking. Also, customer and traveler information
        must be provided by the user. Payment information is not needed for this
        booking, so the object must be empty.


        2. Post to the API URL given, please follow the example in the
        parameters section.


        3. The response will return an object with the information of the
        booking, including the fields *status*, *booking_id*,
        *booking_reference*, *total_retail_price*, *total_retail_tax*,
        *payment_information* and *dining_reservation*.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Booking request.
              properties:
                api_version:
                  type: integer
                  example: 1
                  description: The API version of the request
                transaction_id:
                  type: string
                  format: uuid
                  description: >-
                    Arbitrary string used to identify a request, and prevent
                    duplicate bookings
                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                language:
                  type: string
                  description: a locale string for the customer
                  example: en_US
                customer:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Smith
                    phone_number:
                      type: string
                      example: '15558675309'
                    email:
                      type: string
                      example: smith@mail.com
                    country:
                      type: string
                      example: US
                traveler:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Smith
                    occupancy:
                      type: object
                      properties:
                        adults:
                          type: number
                          description: The amount of adults guests
                          example: 2
                        children:
                          type: number
                          description: The amount of children guests
                          example: 0
                        num_rooms:
                          type: number
                          description: The amount of rooms the guests need.
                          example: 1
                payment:
                  type: object
                dining_booking:
                  type: array
                  title: Dining
                  description: >
                    Array of dining items to be booked - must follow the given
                    structure
                  items:
                    type: object
                    properties:
                      customer:
                        type: object
                        properties:
                          first_name:
                            type: string
                            example: John
                          last_name:
                            type: string
                            example: Smith
                          phone_number:
                            type: string
                            example: '15558675309'
                          email:
                            type: string
                            example: smith@mail.com
                          country:
                            type: string
                            example: US
                      name:
                        type: string
                        description: Name of the dining place
                        example: Persona
                      user_id:
                        type: string
                        example: 4712d644-9de5-427d-92a1-e2b0690bab68
                      dining_id:
                        type: string
                        example: 5D71_0GNtJiAbu-hivtA6g
                      covers:
                        type: number
                        example: 2
                      time:
                        format: time
                        example: '18:00'
                        type: string
                      date:
                        type: string
                        example: '2021-10-29'
                        format: date
                additional_info:
                  type: string
                  description: Additional information for booking request
                  example: No comments
      responses:
        '200':
          description: Reservation on success, or else an Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_version:
                    type: integer
                    example: 1
                    description: The API version of the response
                  transaction_id:
                    type: string
                    format: uuid
                    description: The echoed transaction ID from the booking request
                    example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  status:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: success
                  booking_id:
                    type: string
                    description: The Simplenight Record Locator for the completed booking
                    example: RWQS3NNT
                  booking_reference:
                    type: number
                    example: 3.1682813673158427e+38
                  total_retail_price:
                    type: object
                    example: null
                  total_retail_tax:
                    type: object
                    properties:
                      amount:
                        type: number
                        example: 0
                      currency:
                        type: string
                        example: USD
                  payment_information:
                    type: object
                    example: null
                  dining_reservation:
                    type: array
                    items:
                      type: object
                      description: The booking response for a successful booking
                      properties:
                        note:
                          type: string
                          example: ''
                        record_locator:
                          type: string
                          example: 24e18ba6-d841-4643-bfe8-c4ae2e10d532
                        booking_id:
                          type: string
                          example: 24e18ba6-d841-4643-bfe8-c4ae2e10d532
                        dining_name:
                          type: string
                          example: Persona
                        dining_date:
                          type: string
                          example: '2021-10-29'
                        dining_time:
                          type: string
                          example: '18:00'
                        dining_address:
                          type: string
                          example: 685 Sutter St, San Francisco, CA 94102
                        dining_covers:
                          type: number
                          example: 2
  ///multi/cancel:
    post:
      tags:
        - MultiDining
      summary: Preview cancel booking
      description: >
        Using the parameters *booking_id* (obtained from */multi/book* endpoint)
        and *last_name* from the customer.


        Steps: 


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response.


        2. Post to the API URL given, completing the fields booking_id and
        last_name.


        3. The response is an object with the information of the cancellation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Parameters to preview cancel a booking.
              properties:
                booking_id:
                  type: string
                  description: >-
                    Simplenight booking id provided after booking completion on
                    email or in order summary
                  example: RWQS3NNT
                last_name:
                  type: string
                  description: >-
                    Last name used to fill the primary contact details  while
                    placing the booking
                  example: Smith
      responses:
        '200':
          description: Preview cancellation details
          content:
            application/json:
              schema:
                type: object
                description: |
                  Parameters of the preview cancellation details.
                properties:
                  booking_id:
                    type: string
                    example: RWQS3NNT
                  total_price:
                    type: number
                    format: double
                    example: 0
                  total_tax:
                    type: number
                    format: double
                    example: 0
                  currency:
                    type: string
                    default: USD
                    description: currency at the time of checkout
                  itinerary:
                    type: object
                    properties:
                      dining:
                        type: array
                        items:
                          type: object
                          properties:
                            dining_booking_id:
                              type: string
                              example: 4eaee3b0-a2b0-4939-9a4f-354968469f68
                            record_locator:
                              type: string
                              example: 24e18ba6-d841-4643-bfe8-c4ae2e10d532
                            name:
                              type: string
                              example: Persona
                            address:
                              type: string
                              example: 685 Sutter St, San Francisco, CA 94102
                            date:
                              type: string
                              example: '2021-10-29'
                            time:
                              type: string
                              example: 06:00 PM
                            covers:
                              type: number
                              example: 2
                            booking_satus:
                              type: string
                              example: booked
  ///multi/cancel-confirm:
    post:
      tags:
        - MultiDining
      summary: Cancelling booking
      description: >
        Using the parameters *booking_id* (obtained from */multi/book*
        endpoint), *last_name* from the customer and *dining_booking_id*
        (obtained from */multi/cancel* endpoint).


        Steps: 


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response. Also
        dining_booking_id from the booking endpoint response.


        2. Post to the API URL given, completing the mandatory fields booking_id
        and last_name, and dining_booking_id.


        3. The response is an object with the information of the cancellation,
        including the fields booking_id, record_locator, booking_status,
        cancelled and amount_refunded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Parameters to preview cancel a booking.
              properties:
                booking_id:
                  type: string
                  description: >-
                    Simplenight booking id provided after booking completion on
                    email or in order summary
                  example: RWQS3NNT
                last_name:
                  type: string
                  description: >-
                    Last name used to fill the primary contact details  while
                    placing the booking
                  example: Smith
                dining_booking_id:
                  type: string
                  description: Booking id for the dining booking
                  example: 4eaee3b0-a2b0-4939-9a4f-354968469f68
      responses:
        '200':
          description: Cancellation confirmation
          content:
            application/json:
              schema:
                type: object
                description: |
                  Parameters of the preview cancellation details.
                properties:
                  booking_id:
                    type: string
                    example: RWQS3NNT
                  record_locator:
                    type: string
                    example: 24e18ba6-d841-4643-bfe8-c4ae2e10d532
                  booking_status:
                    type: string
                    example: cancelled
                  cancelled:
                    type: boolean
                    example: true
                  amount_refunded:
                    type: number
                    example: null
  ////multi/search:
    post:
      tags:
        - MultiActivity
      summary: Search for available activities
      description: >
        Using the parameters *location_id* (obtained from */location/cities*
        endpoint), *begin_date*, *end_date*, *adults*, *children* and
        *currency*.


        Steps:


        1. Define location_id as location_id indicates in locations endpoint for
        the desired location.


        2. Post to the API URL given, complete the fields for product_types as
        “activities”. For activity_search include location_id, begin_date,
        end_date, adults and children.


        3. The response will bring an object with activity_results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: >
                Parameters to search for hotels.  Will return all hotels
                available on any date between start_date and end_date for a
                given occupancy (children, adults).
              properties:
                product_types:
                  type: array
                  items:
                    example:
                      - activities
                activity_search:
                  type: object
                  title: Hotel search request
                  required:
                    - location_id
                    - begin_date
                    - end_date
                    - adults
                    - children
                  properties:
                    location_id:
                      type: string
                      description: Simplenight Hotel ID
                      example: '5391959'
                    begin_date:
                      type: string
                      format: date
                      description: The checkin date
                      example: '2021-10-29'
                    end_date:
                      type: string
                      format: date
                      description: The checkout date
                      example: '2021-10-30'
                    adults:
                      type: number
                      description: The amount of adults guests
                      example: 2
                    children:
                      type: number
                      description: The amount of children guests
                      example: 0
                    currency:
                      type: string
                      minLength: 3
                      maxLength: 3
                      description: Optional.  ISO-format 3-character currency code
                      example: USD
      responses:
        '200':
          description: List of matching activities
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity_results:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: San Francisco happy hour and cocktail cruise
                          description: Name of the activity
                        code:
                          type: string
                          description: >
                            The identifier for this product type.  This code is
                            subsequently used to reference the product

                            in either the details, variants, or booking
                            endpoints.
                          example: cb45c09b
                        activity_id:
                          type: string
                          description: >-
                            A permanent activity ID returned in Availability,
                            which can be used alternatively to activity `code`
                          example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
                        description:
                          type: string
                          description: Free-form text describing the activity
                          example: >-
                            Meeting Point: Please arrive at Pier 3 at least 30
                            minutes prior to start time for boarding.Hop onboard
                            for a two-hour cruise, taking in San Francisco's
                            landmark sites and city skyline with a cocktail in
                            hand! Cruise past Alcatraz and the Golden Gate to
                            the backdrop of local and guest DJs spinning top
                            40's tunes. Take a seat and relax on the yacht's
                            cocktail seating or enjoy a variety of drinks and
                            snacks available from the full onboard bar.
                        activity_date:
                          type: string
                          example: '2021-10-29'
                          description: The initial date an activity is available
                          format: date
                        total_price:
                          type: object
                          properties:
                            amount:
                              type: number
                              example: 39.2
                            currency:
                              type: string
                              example: USD
                        location:
                          type: object
                          properties:
                            address:
                              type: string
                              example: United States of America, San Francisco
                            latitude:
                              type: number
                              example: 37.798145
                            longitude:
                              type: number
                              example: -122.395321
                        categories:
                          type: array
                          example:
                            - Activities
                            - Water activities
                            - Cruise rides
                          description: >-
                            A list of categories applicable to this activity
                            product
                          items:
                            type: string
                        images:
                          type: array
                          description: >-
                            A list of images associated with this activity
                            product
                          items:
                            type: object
                            properties:
                              url:
                                type: string
                                example: >-
                                  https://images-sandbox.musement.com/cover/0003/93/thumb_292702_cover_header.jpeg?w=540
                                description: Image URL.  Always in HTTPS.
                              type:
                                type: string
                                example: exterior
                                description: The type of image being returned
                              display_order:
                                type: integer
                                example: 1
                                description: >-
                                  A suggested order to display the images,
                                  beginning with 1
                        rating:
                          type: number
                          description: The average user rating for this activity product
                          example: 4.5
                        reviews:
                          type: integer
                          description: The number of user reviews for this activity product
                          example: 28
                        reviews_avg:
                          type: string
                          example: 4.5
                        operational_days:
                          type: string
                          description: Availability
                          example: Thursdays
                        voucher_access_usage:
                          type: string
                          description: Review
                          example: MOBILE
                        duration_range:
                          type: object
                          description: Duration
                          example: '2:00:00'
                          properties:
                            max:
                              type: string
                        languages:
                          type: array
                          description: Language
                          items:
                            example:
                              - code: en
                                name: English
                              - code: fr
                                name: French
                          properties:
                            code:
                              type: string
                            name:
                              type: string
                        meeting_point:
                          type: string
                          description: Meeting Place
                          example: >-
                            Please arrive at Pier 3 at least 30 minutes prior to
                            start time for boarding.
                        service_fee:
                          type: object
                          properties:
                            currency:
                              type: string
                              example: USD
                            value:
                              type: number
                              example: 0
                            formatted_value:
                              type: string
                              example: $ 0.00
                            formatted_iso_value:
                              type: string
                              example: $0.00
                        retail_price:
                          description: From Price
                          type: object
                          example:
                            currency: USD
                            value: 35
                            formatted_value: $ 35.00
                            formatted_iso_value: $35.00
                          properties:
                            currency:
                              type: string
                            value:
                              type: number
                            formatted_value:
                              type: string
                            formatted_iso_value:
                              type: string
  ////multi/detail:
    post:
      tags:
        - MultiActivity
      summary: Detail of an activity
      description: >
        Using the parameter *activity_id* from */multi/search* response,
        *date_from*, *date_to* and *currency*.


        Steps:


        1. Define activity_id as activity_id indicates in search endpoint for
        the desired activity.


        2. Post to the API URL given, complete the fields for activity_id,
        date_from, date_to and currency.


        3. The response will bring an object with activity_results object
        nested.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: |
                Parameters of information for activity.
              properties:
                activity_detail:
                  type: object
                  properties:
                    activity_id:
                      type: string
                      example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
                    date_from:
                      type: string
                      example: '2021-10-29'
                    date_to:
                      type: string
                      example: '2021-10-29'
                    currency:
                      type: string
                      example: USD
      responses:
        '200':
          description: Detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity_result:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 04353b69-2052-43a9-a109-fc238d438001
                      activity_id:
                        type: string
                        example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
                      type:
                        type: string
                        example: TOUR
                      name:
                        type: string
                        example: San Francisco happy hour and cocktail cruise
                      description:
                        type: string
                        example: >-
                          Meeting Point: Please arrive at Pier 3 at least 30
                          minutes prior to start time for boarding.

                          Hop onboard for a two-hour cruise, taking in San
                          Francisco's landmark sites and city skyline with a
                          cocktail in hand! Cruise past Alcatraz and the Golden
                          Gate to the backdrop of local and guest DJs spinning
                          top 40's tunes. Take a seat and relax on the yacht's
                          cocktail seating or enjoy a variety of drinks and
                          snacks available from the full onboard bar.
                      destination:
                        type: string
                        example: null
                      destination_id:
                        type: string
                        example: null
                      categories:
                        type: array
                        items:
                          type: string
                          example:
                            - Attractions & guided tours
                      timezone:
                        type: string
                        example: America/Los_Angeles
                      images:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: >-
                                https://images-sandbox.musement.com/cover/0003/93/thumb_292702_cover_header.jpeg?w=540
                              description: Image URL.  Always in HTTPS.
                            type:
                              type: string
                              example: exterior
                              description: The type of image being returned
                            display_order:
                              type: integer
                              example: 1
                              description: >-
                                A suggested order to display the images,
                                beginning with 1
                      contact:
                        type: object
                        properties:
                          name:
                            type: string
                            example: Musement
                          email:
                            type: string
                            example: support@musement.com
                          website:
                            type: string
                            example: https://www.musement.com
                          address:
                            type: string
                            example: Milan at Via Polesine, 13
                          phones:
                            type: array
                            items:
                              type: string
                            example:
                              - 'IT: 00390235401375'
                              - 'UK: 0044(0)2034990386'
                              - 'FR: 0033(0)176545862'
                              - 'ES: 0034911223521'
                              - 'DE: 0049(0)3022380196'
                              - 'US: 0012023899064'
                              - 'NL: 0031(0)204990726'
                              - 'PT: 00351289983936'
                              - 'CH: 0041(0)315671489'
                              - 'WhatsApp: +39 393 8611983'
                      locations:
                        type: object
                        properties:
                          address:
                            type: string
                            example: United States of America, San Francisco
                          latitude:
                            type: string
                            example: '37.798145'
                          longitude:
                            type: string
                            example: '-122.395321'
                      availabilities:
                        type: array
                        items:
                          type: string
                        example:
                          - '2021-10-29'
                      min_age:
                        type: string
                        example: null
                      language:
                        type: string
                        example: null
                      culture_shock:
                        type: string
                        example: null
                      physicality:
                        type: string
                        example: null
                      total_price:
                        type: object
                        properties:
                          amount:
                            type: number
                            example: 35
                          currency:
                            type: string
                            example: USD
                      policies:
                        type: array
                        items:
                          type: string
                      schedule_details:
                        type: string
                        example: null
                      itinerary_details:
                        type: string
                        example: null
                      cancellations:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: PT48H
                            label:
                              type: string
                              example: Refundable amount 100.0% before 48 Hours
                      provider_data:
                        type: string
                        example: null
                      rating:
                        type: number
                        example: 5
                      reviews:
                        type: number
                        example: 10
                      sale_status:
                        type: string
                        description: Venue status – opening times / Closed
                      duration:
                        type: string
                        format: time
                        description: Duration
                      instant_ticket_delivery:
                        type: boolean
                        description: Instant Ticket Delivery
                      last_admission_window:
                        type: string
                        description: Last Admission
                      skip_line:
                        type: boolean
                        description: Skip the Line
                      wheelchair_access:
                        type: boolean
                        description: Wheel chair accessible
                      smartphone_ticket:
                        type: boolean
                        description: Smartphone tickets accepted
                      audio_guide_languages:
                        type: string
                        description: Audio Guide
                      live_guide_languages:
                        type: string
                        description: Live Guide Language
                      safety_measures:
                        type: object
                        description: COVID safety measures
                        properties:
                          has_reduced_capacity:
                            type: boolean
                          has_temperature_checks:
                            type: boolean
                          cash_accepted:
                            type: boolean
                          has_intensified_cleaning:
                            type: boolean
                          online_ticketing_only:
                            type: boolean
                          has_hand_sanitizer_available:
                            type: boolean
                          has_social_distancing:
                            type: boolean
                      best_time_to_visit:
                        type: string
                        format: time
                        description: Best Time to Visit
                      included:
                        type: string
                        description: What's included
                      excluded:
                        type: string
                        description: What’s not included
                      highlights:
                        type: array
                        description: Exhibitions
                        items:
                          example:
                            - title: >-
                                Cruise past the iconic sites of San Francisco on
                                a two-hour cocktail cruise
                            - title: >-
                                Enjoy top 40's tunes spun by onboard local and
                                guest DJs
                        properties:
                          title:
                            type: string
                      exhibitions:
                        type: array
                        description: Exhibitions
                        items:
                          type: string
                      reviews_avg:
                        type: string
                      voucher_access_usage:
                        type: string
                        description: Review
                      languages:
                        type: array
                        description: Language
                        items:
                          example:
                            - code: en
                              name: English
                            - code: fr
                              name: French
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                      features:
                        type: array
                        description: Features
                        items:
                          example:
                            - code: istant
                              name: Instant confirmation
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                      services:
                        type: array
                        description: Services
                        items:
                          type: object
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                      service_fee:
                        type: object
                        description: Booking Fee
                        properties:
                          currency:
                            type: string
                            example: USD
                          value:
                            type: number
                            example: 0
                          formatted_value:
                            type: string
                            example: $ 0.00
                          formatted_iso_value:
                            type: string
                            example: $0.00
                      retail_price:
                        description: From Price
                        type: object
                        properties:
                          currency:
                            type: string
                            example: USD
                          value:
                            type: number
                            example: 35
                          formatted_value:
                            type: string
                            example: $ 35.00
                          formatted_iso_value:
                            type: string
                            example: $35.00
                      operational_days:
                        type: string
                        description: Availability
                        example: Thursdays
                      duration_range:
                        type: string
                        description: Duration
                        example: '2:00:00'
                      meeting_point:
                        type: string
                        description: Meeting Place
                        example: >-
                          Please arrive at Pier 3 at least 30 minutes prior to
                          start time for boarding.
                      additional_information:
                        type: string
                      comments:
                        type: array
                        items:
                          type: string
                      when:
                        type: string
                        example: >-
                          <ul><li>Thursdays 6.00pm to 8.00pm</li><li>Boarding at
                          5.30pm</li></ul>
                      info:
                        type: string
                        example: >-
                          <ul><li>Cash bar- full bar available to purchase
                          beverages on board</li><li>Available only for guests
                          21 years and older</li></ul>
                      venues:
                        type: array
                        items:
                          type: string
                      extra_customer_data:
                        type: object
                        properties:
                          title:
                            type: string
                            example: form
                          type:
                            type: string
                            example: object
                          properties:
                            type: array
                            items:
                              type: string
  ////multi/variants:
    post:
      tags:
        - MultiActivity
      summary: Available times of an activity
      description: >
        Using the parameter *activity_id* from */multi/search* response,
        *activity_date* and *currency*.


        Steps:


        1. Define code as code indicates in activity search endpoint response.


        2. Post to the API URL given, complete the fields for code and
        activity_date.


        3. The response will bring an object indicating hours or whole day
        activity as nested objects.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_id:
                  type: string
                  example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
                activity_date:
                  type: string
                  example: '2021-10-29'
                currency:
                  type: string
                  example: USD
      responses:
        '200':
          description: Detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  variants:
                    type: object
                    properties:
                      '09:00':
                        type: array
                        description: Hour
                        items:
                          example:
                            - code: '4383068526'
                              name: Standard price (21+) (Ticket)
                              description: No Description
                              price: 47.04
                              provider_price: 42
                              capacity: 15
                              min_capacity: 1
                              additional: {}
                              currency: USD
                              type: musement
                        properties:
                          code:
                            type: string
                          name:
                            type: string
                          description:
                            type: string
                          price:
                            type: number
                          provider_price:
                            type: number
                          capacity:
                            type: number
                          min_capacity:
                            type: number
                          additional:
                            type: object
                          currency:
                            type: string
                          type:
                            type: string
  ////multi/book:
    post:
      tags:
        - MultiActivity
      summary: Book an activity
      description: >
        Using the parameters *location_id* (obtained from */location/cities*
        endpoint), *begin_date*, *end_date*, *adults*, *children* and
        *currency*.


        Steps:


        1. For the booking endpoint it is necessary to declare a transaction_id,
        this is an arbitrary string used to identify a request and prevent
        duplicate bookings. Also, customer, traveler and billing address
        information must be provided by the user. Payment information is
        provided by the payment service.


        2. Post to the API URL given, please follow the example in the
        parameters section.


        3. The response will return an object with the information of the
        booking, including the fields status, booking_id, booking_reference,
        total_retail_price, total_retail_tax, payment_information and
        activity_reservation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Booking request.
              properties:
                api_version:
                  type: integer
                  example: 1
                  description: The API version of the request
                transaction_id:
                  type: string
                  format: uuid
                  description: >-
                    Arbitrary string used to identify a request, and prevent
                    duplicate bookings
                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                language:
                  type: string
                  description: a locale string for the customer
                  example: en_US
                customer:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Smith
                    phone_number:
                      type: string
                      example: '15558675309'
                    email:
                      type: string
                      example: smith@mail.com
                    country:
                      type: string
                      example: US
                traveler:
                  type: object
                  properties:
                    first_name:
                      type: string
                      example: John
                    last_name:
                      type: string
                      example: Smith
                    occupancy:
                      type: object
                      properties:
                        adults:
                          type: number
                          description: The amount of adults guests
                          example: 2
                        children:
                          type: number
                          description: The amount of children guests
                          example: 0
                        num_rooms:
                          type: number
                          description: The amount of rooms the guests need.
                          example: 1
                payment:
                  type: object
                  properties:
                    payment_method:
                      type: string
                      example: PAYMENT_TOKEN
                    payment_token:
                      type: string
                      example: cnon:card-nonce-ok
                    buyer_verification_token:
                      type: string
                      example: stringtoken
                    billing_address:
                      type: object
                      properties:
                        address1:
                          type: string
                          example: 5554 W 9th St
                        address2:
                          type: string
                          example: null
                        address3:
                          type: string
                          example: null
                        city:
                          type: string
                          example: Los Angeles
                        province:
                          type: string
                          example: CA
                        postal_code:
                          type: string
                          example: CA 90036
                        country:
                          type: string
                          example: US
                activity_booking:
                  type: array
                  title: Activity
                  description: >
                    Array of dining items to be booked - must follow the given
                    structure
                  items:
                    type: object
                    properties:
                      activity_id:
                        type: string
                        example: 5fd67fa6:3f65cd40-d975-4832-a1a2-45271857acc3
                      language_code:
                        type: string
                        example: USD
                      activity_date:
                        type: string
                        example: '2021-10-29'
                      activity_time:
                        type: string
                        example: '09:00'
                      currency:
                        type: string
                        example: USD
                      items:
                        type: array
                        description: Items to book
                        items:
                          example:
                            code: '4383004870'
                            quantity: 2
                        properties:
                          code:
                            type: string
                          quantity:
                            type: number
                additional_info:
                  type: string
                  description: Additional information for booking request
                  example: No comments
      responses:
        '200':
          description: Reservation on success, or else an Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_version:
                    type: integer
                    example: 1
                    description: The API version of the response
                  transaction_id:
                    type: string
                    format: uuid
                    description: The echoed transaction ID from the booking request
                    example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  status:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true
                      message:
                        type: string
                        example: success
                  booking_id:
                    type: string
                    description: The Simplenight Record Locator for the completed booking
                    example: 55BNZ1SG
                  booking_reference:
                    type: number
                    example: 5.660890309644612e+37
                  total_retail_price:
                    type: object
                    properties:
                      amount:
                        type: number
                        example: 78
                      currency:
                        type: string
                        example: USD
                  total_retail_tax:
                    type: object
                    properties:
                      amount:
                        type: number
                        example: 0
                      currency:
                        type: string
                        example: USD
                  payment_information:
                    type: object
                    properties:
                      card_brand:
                        type: string
                        example: VISA
                      last_four_digits:
                        type: number
                        example: 5858
                  activity_reservation:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: object
                          description: The booking response for a successful booking
                          properties:
                            success:
                              type: boolean
                              example: true
                            message:
                              type: string
                        activity_name:
                          type: string
                          example: San Francisco happy hour and cocktail cruise
                        record_locator:
                          type: object
                          properties:
                            id:
                              type: string
                              example: MUS1275513
                            pin:
                              type: string
                              example: null
                        items:
                          type: array
                          items:
                            example:
                              - code: '4383068526'
                                quantity: 2
                        activity_id:
                          type: string
                          example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
                        total_base:
                          type: number
                          format: double
                        total_tax:
                          type: number
                          format: double
                        total_price:
                          type: number
                          format: double
                          example: 35
                        activity_reservation_id:
                          type: string
                          example: f2ea05ed-1d77-4cfc-be9d-124c4bb5b215
                        date:
                          type: string
                          example: Thu, Oct 29 2021
                        time:
                          type: string
                          example: 09:00 AM
                        address:
                          type: string
                          example: Milan at Via Polesine, 13
  ////multi/cancel:
    post:
      tags:
        - MultiActivity
      summary: Preview cancel booking
      description: >
        Using the parameters *booking_id* (obtained from */multi/book* endpoint)
        and *last_name* from the customer.


        Steps: 


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response.


        2. Post to the API URL given, completing the fields booking_id and
        last_name.


        3. The response is an object with the information of the cancellation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Parameters to preview cancel a booking.
              properties:
                booking_id:
                  type: string
                  description: >-
                    Simplenight booking id provided after booking completion on
                    email or in order summary
                  example: 55BNZ1SG
                last_name:
                  type: string
                  description: >-
                    Last name used to fill the primary contact details  while
                    placing the booking
                  example: Smith
      responses:
        '200':
          description: Preview cancellation details
          content:
            application/json:
              schema:
                type: object
                description: |
                  Parameters of the preview cancellation details.
                properties:
                  booking_id:
                    type: string
                    example: 55BNZ1SG
                  total_price:
                    type: number
                    format: double
                    example: 35
                  total_tax:
                    type: number
                    format: double
                    example: 0
                  currency:
                    type: string
                    default: USD
                    description: currency at the time of checkout
                  itinerary:
                    type: object
                    description: >
                      Response for multi product response of activity item
                      inside cancel lookup 'itinerary' object
                    properties:
                      is_cancellable:
                        type: boolean
                        example: true
                      activity_title:
                        type: string
                        description: Name of the activity
                        example: San Francisco happy hour and cocktail cruise
                      activity_date:
                        type: string
                        format: date
                        example: '2021-10-29'
                      activity_booking_id:
                        type: string
                        example: f2ea05ed-1d77-4cfc-be9d-124c4bb5b215
                      booking_status:
                        type: string
                        example: booked
                      description:
                        type: string
                        description: Description fot the activity item
                        example: null
                      begin_date:
                        type: string
                        format: date
                        example: '2021-10-29'
                      end_date:
                        type: string
                        format: date
                        example: '2021-10-29'
                      amount:
                        type: number
                        format: double
                        example: 35
                      tax:
                        type: number
                        format: double.
                        example: 0
                      refund_amount:
                        type: number
                        format: double
                        example: 35
                      currency:
                        type: string
                        example: USD
                      payment_information:
                        type: object
                        properties:
                          card_brand:
                            type: string
                            example: VISA
                          last_four_digits:
                            type: number
                            example: 5858
                      activity_reservation:
                        type: object
                        properties:
                          status:
                            type: object
                            description: The booking response for a successful booking
                            properties:
                              success:
                                type: boolean
                                example: true
                              message:
                                type: string
                                example: Refundable
                          activity_name:
                            type: string
                            example: San Francisco happy hour and cocktail cruise
                          record_locator:
                            type: object
                            properties:
                              id:
                                type: string
                                example: MUS1275513
                              pin:
                                type: string
                                example: null
                          items:
                            type: array
                            items:
                              example:
                                - code: '4383068526'
                                  quantity: 2
                          activity_id:
                            type: string
                            example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
                          total_base:
                            type: number
                            format: double
                          total_tax:
                            type: number
                            format: double
                          total_price:
                            type: number
                            format: double
                            example: 35
                          activity_reservation_id:
                            type: string
                            example: f2ea05ed-1d77-4cfc-be9d-124c4bb5b215
                          date:
                            type: string
                            example: Thu, Oct 29 2021
                          time:
                            type: string
                            example: 09:00 AM
                          address:
                            type: string
                            example: Milan at Via Polesine, 13
  ////multi/cancel-confirm:
    post:
      tags:
        - MultiActivity
      summary: Cancelling booking
      description: >
        Using the parameters *booking_id* (obtained from */multi/book*
        endpoint), *last_name* from the customer and *acticity_booking_id*
        (obtained from */multi/cancel* endpoint).


        Steps: 


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response. Also
        activity_booking_id from the booking endpoint response.


        2. Post to the API URL given, completing the mandatory fields booking_id
        and last_name, and activity_booking_id.


        3. The response is an object with the information of the cancellation,
        including the fields booking_id, record_locator, booking_status,
        cancelled and amount_refunded
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Parameters to preview cancel a booking.
              properties:
                booking_id:
                  type: string
                  description: >-
                    Simplenight booking id provided after booking completion on
                    email or in order summary
                  example: 55BNZ1SG
                last_name:
                  type: string
                  description: >-
                    Last name used to fill the primary contact details  while
                    placing the booking
                  example: Smith
                activity_booking_id:
                  type: string
                  description: Booking id for the activity booking
                  example: f2ea05ed-1d77-4cfc-be9d-124c4bb5b215
      responses:
        '200':
          description: Cancellation confirmation
          content:
            application/json:
              schema:
                type: object
                description: |
                  Parameters of the preview cancellation details.
                properties:
                  booking_id:
                    type: string
                    example: f2ea05ed-1d77-4cfc-be9d-124c4bb5b215
                  record_locator:
                    type: string
                    example: 55BNZ1SG
                  booking_status:
                    type: string
                    example: cancelled
                  cancelled:
                    type: boolean
                    example: true
                  amount_refunded:
                    type: number
                    example: 35
  /hotels/search-by-location:
    post:
      tags:
        - Hotel
      summary: Search for hotels in a location
      description: >
        Using a Simplenight Location ID (obtained from /location/cities
        endpoint), start and end date, occupancy, language, and currency.


        Steps:


        1. Define location_id as location_id indicates in locations endpoint for
        the desired location.


        2. Post to the API URL given, completing the fields for product_types as
        “hotels” and hotel_search that includes location_id, start_date,
        end_date, occupancy (adults, children and num_rooms), language and
        currency.


        3. The response is an array of hotels and its rooms available for the
        information provided in the request made. Each object has information
        such as hotel address, phone number, amenities, room type, room price
        and photos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelLocationSearchRequest'
      responses:
        '200':
          description: List of matching Hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HotelSearchResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /hotels/search-by-id:
    post:
      tags:
        - Hotel
      summary: Search for a specific hotel
      description: >
        Search for a specific hotel using its Hotel ID (obtained from
        /hotels/search-by-location), start and end date, occupancy, language,
        and currency.


        Steps:


        1. Define hotel_id as hotel_id indicates in search-by-location endpoint
        for the desired hotel.


        2. Post to the API URL given, complete the fields for product_types as
        “hotels” and hotel_search that includes hotel_id, start_date, end_date,
        occupancy (adults, children and num_rooms), language and currency.


        3. The response is an array of a single hotel and its rooms available
        for the information provided in the request made. The object has
        information such as hotel address, phone number, amenities, room type,
        room price and photos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelSearchRequest'
      responses:
        '200':
          description: Matching hotel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelSearchResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /hotels/booking:
    post:
      tags:
        - Hotel
      summary: Submit a booking request and receive a Reservation in response.
      description: >
        Collect a customer record, payment information and itinerary for booking
        and return a Reservation on success.


        Steps:


        1. For the booking endpoint it is necessary to declare a transaction_id,
        this is an arbitrary string used to identify a request and prevent
        duplicate bookings. Also, customer, traveler and billing address
        information must be provided by the user. Payment information is
        provided by the payment service.


        2. Post to the API URL given, please follow the example in the
        parameters section.


        3. The response will return an object with the information of the
        booking, including the fields status, booking_id, booking_reference,
        total_retail_price, total_retail_tax, payment_information and
        hotel_reservation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelBookingRequest'
      responses:
        '200':
          description: Reservation on success, or else an Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelBookingResponse'
        '400':
          description: Bad request
        '500':
          description: Internal error while completing a booking
  /hotels/cancel:
    post:
      tags:
        - Hotel
      summary: Lookup cancel info
      description: >
        Lookup a booking with a Booking ID (obtained from /hotels/booking) and
        Lead Traveler Last Name, and return current Cancellation Policy.


        Steps: 


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response.


        2. Post to the API URL given, completing the fields booking_id and
        last_name.


        3. The response is an object with the information of the cancellation,
        including the field is_cancellable that indicates if the cancellation
        can be done.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
      responses:
        '200':
          description: The current matching cancellation policy, or an error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResponse'
        '400':
          description: Bad request
        '500':
          description: Internal error while completing a booking
  /hotels/cancel-confirm:
    post:
      tags:
        - Hotel
      summary: Lookup cancel info
      description: >
        Lookup a booking with a Booking ID (obtained from /hotels/booking) and
        Lead Traveler Last Name, and return current Cancellation Policy


        Steps:


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response. Also
        hotel_booking_id, from thet booking endpoint response.


        2. Post to the API URL given, completing the mandatory fields
        booking_id, last_name and hotel_booking_id.


        3. The response is an object with the information of the cancellation,
        including the fields booking_id, record_locator, booking_status,
        cancelled and amount_refunded.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
      responses:
        '200':
          description: The current matching cancellation policy, or an error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmCancelResponse'
        '400':
          description: Bad request
        '500':
          description: Internal error while completing a booking
  /dinings/search:
    post:
      tags:
        - Dining
      summary: Search for dinings in a location
      description: >
        Using a Simplenight city ID (obtained from /location/cities)


        Steps:


        1. Define location_id as location_id indicates in locations endpoint for
        the desired location.


        2. Post to the API URL given, complete the fields for product_types as
        “dining”. For dining_search include covers, current_page, per_page,
        latitude, longitude, time and date.


        3. The response will bring an object with dining_results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiningLocationSearchRequest'
      responses:
        '200':
          description: List of matching Dinings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiningSearchResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /dinings/search-by-id:
    post:
      tags:
        - Dining
      summary: Search for dining item by its id
      description: >
        Using a specific dining_id (obtained from /dinings/search)


        Steps:


        1. Define dining_id as dining_id indicates in dinings/search-by-id
        endpoint for the desired restaurant.


        2. Post to the API URL given, complete the fields for product_types as
        “dining”. For dining_search include covers, current_page, per_page,
        latitude, longitude, time and date.


        3. The response will bring an object with dining_results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiningSearchByIdRequest'
      responses:
        '200':
          description: Details of the dining with the dining_id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiningSearchByIdResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /dinings/available-times:
    post:
      tags:
        - Dining
      summary: Search for available time of a specific dining
      description: >
        Using item dining_id (obtained from /dinings/search), and date.


        Steps:


        1. Define dining_id as dining_id indicates in dining search endpoint
        response.


        2. Post to the API URL given, complete the fields for dining_id, date,
        time and covers.


        3. The response will bring an object indicating available date and times
        as nested objects, also a boolean indicating if the place supports
        online booking.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiningAvailableTimesRequest'
      responses:
        '200':
          description: List of available times for a date
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiningAvailableTimesResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /dinings/reviews:
    post:
      tags:
        - Dining
      summary: Search for reviews of a specific dining
      description: >
        Using a item dining_id (obtained from /dinings/search)


        Steps:


        1. Define dining_id as dining_id indicates in dining search endpoint
        response.


        2. Post to the API URL given, complete the field for dining_id.


        3. The response will bring an array of ojects for each review indicating
        rating, text (user comment), timestamp, user name and user image.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiningReviewsRequest'
      responses:
        '200':
          description: List of all the reviews of dining
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiningReviewsResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /dinings/booking:
    post:
      tags:
        - Dining
      summary: Book a dining item
      description: >
        Using all the Itinerary details, payment details and customer &
        traveller details


        Steps:


        1. For the booking endpoint it is necessary to declare a transaction_id,
        this is an arbitrary string used to identify a request and prevent
        duplicate bookings; likewise it is necessary to declare an unique
        user_id for a dining booking. Also, customer, traveler and billing
        address information must be provided by the user. Payment information is
        provided by the payment service.


        2. Post to the API URL given, please follow the example in the
        parameters section.


        3. The response will return an object with the information of the
        booking, including the fields status, booking_id, booking_reference,
        total_retail_price, total_retail_tax, payment_information and
        dining_reservation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiningBookingRequest'
      responses:
        '200':
          description: Booking details as booking_id and confirmation locator id
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiningBookingResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /dinings/cancel-booking:
    post:
      tags:
        - Dining
      summary: Cancel a dinings booking
      description: >
        Using Booking ID (obtained from /dinings/booking)


        Steps:


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response.


        2. Post to the API URL given, completing the fields booking_id and
        last_name.


        3. The response is an object with the information of the cancellation,
        including the field is_cancellable that indicates if the cancellation
        can be done.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiningCancelBookingRequest'
      responses:
        '200':
          description: List of matching Hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiningCancelBookingResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /multi/search:
    post:
      tags:
        - MultiProduct
      summary: Search
      operationId: multiProductSearch
      description: >
        Availability search for multiple products.  Currently supports Hotel,
        Activity, and Dining.


        Steps:


        1. Define location_id as location_id indicates in locations endpoint for
        the desired location.


        2. Post to the API URL given, Post to the API URL given, complete the
        fields for product_types as “hotels”, “activities” and/or “dining”. 
          For hotel_search include location_id, start_date, end_date, occupancy (adults, children and num_rooms), language and currency.
          For activity_search include location_id, begin_date, end_date, adults and children.
          For dining_search include covers, current_page, per_page, latitude, longitude, time and date.

        3. The response will bring an object with hotel_results,
        activity_results and dining_results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiProductSearchRequest'
      responses:
        '200':
          description: List of matching products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultiProductSearchResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /multi/details:
    post:
      tags:
        - MultiProduct
      summary: Multi product details from single endpoint for activities and dining
      description: >
        Returns the specific details of the products requested.


        Steps:


        1. From the search endpoint response define code for activity_detail and
        dining_id for dining_detail.


        2. Post to the API URL given, complete the fields as following: For
        activity_detail complete the fields code, currency, date_from and
        date_to. For dining_detail complete the field dining_id.


        3. The response will bring an object with the parameters
        activity_results and dining_results.
      operationId: multiDetails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiDetailsRequest'
      responses:
        '200':
          description: List of matching products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultiDetailsResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /multi/hotel-details:
    post:
      tags:
        - MultiProduct
      summary: Multi product details from single endpoint for hotels
      description: |
        Returns the specific details of the products requested.
      operationId: multiDetailsHotel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiDetailsRequestHotel'
      responses:
        '200':
          description: List of matching products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultiDetailsResponseHotel'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /multi/variants:
    post:
      tags:
        - MultiProduct
      summary: Activity Tickets
      operationId: activityTickets
      description: >
        Returns the specific times an activity is available, along with prices
        for specific ticket types (e.g., adults, children, senior, etc). `code`
        from /multi/search response is needed.


        Steps:


        1. Define code as code indicates in activity search endpoint response.


        2. Post to the API URL given, complete the fields for code and
        activity_date.


        3. The response returns an associative map, keyed by the activity times.
        For example:


            {
              "variants": {
                "12:00": [
                  {
                    "code": "2636",
                    "name": "Adult",
                    "description": "Age: 25 - 64",
                    "price": 16.78,
                    "capacity": 20,
                    "additional": {}
                  }
                ],
                "13:00": [
                  {
                    "code": "2636",
                    "name": "Adult",
                    "description": "Age: 25 - 64",
                    "price": 16.78,
                    "capacity": 20,
                    "additional": {}
                  }
                ]
              }
            }

          When the key is `whole_day`, the activity has a single start time, and all products apply to that start time.

            {
              "variants": {
                "whole_day": [
                  {
                    "code": "2636",
                    "name": "Adult",
                    "description": "Age: 25 - 64",
                    "price": 16.78,
                    "capacity": 20,
                    "additional": {}
                  }
                ]
              }
            }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityTicketRequest'
      responses:
        '200':
          description: List of activity ticket options
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActivityTicketResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /multi/book:
    post:
      tags:
        - MultiProduct
      summary: Multi-Product Book
      operationId: multiProductBook
      description: >
        Book multiple products in a single transaction.


        Steps:


        1. For the booking endpoint it is necessary to declare a transaction_id,
        this is an arbitrary string used to identify a request and prevent
        duplicate bookings. Also, customer, traveler and billing address
        information must be provided by the user. Payment information is
        provided by the payment service.


        2. Post to the API URL given, please follow the example in the
        parameters section.


        3. The response will return an object with the information of the
        booking, including the fields status, booking_id, booking_reference,
        total_retail_price, total_retail_tax, payment_information and
        activity_reservation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiProductBookingRequest'
      responses:
        '200':
          description: List of matching products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultiProductBookingResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No locations found for input
  /multi/cancel:
    post:
      tags:
        - MultiProduct
      summary: Multi-Product Cancel
      operationId: multiProductCancel
      description: >
        Cancel lookup for multiple products in a single fetch.


        Steps:


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response.


        2. Post to the API URL given, completing the fields booking_id and
        last_name.


        3. The response is an object with the information of the cancellation,
        including the field is_cancellable that indicates if the cancellation
        can be done.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiProductCancelRequest'
      responses:
        '200':
          description: All the details of a specific SN booking
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultiProductCancelResponse'
        '400':
          description: Bad input parameter
        '404':
          description: No booking items found
  /multi/cancel-confirm:
    post:
      tags:
        - MultiProduct
      summary: Multi-Product Cancel Confirm
      operationId: multiProductCancelConfirm
      description: >
        Cancel multiple products in a single transaction.


        Steps:


        1. Define booking_id as booking_id and last_name as last_name (from
        customer) indicates in the multiproduct booking endpoint response. Also
        activity_booking_id from the booking endpoint response.


        2. Post to the API URL given, completing the mandatory fields booking_id
        and last_name, and activity_booking_id.


        3. The response is an object with the information of the cancellation,
        including the fields booking_id, record_locator, booking_status,
        cancelled and amount_refunded.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiProductCancelConfirmRequest'
      responses:
        '200':
          description: Cancellation success details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MultiProductCancelConfirmResponse'
        '400':
          description: bad input parameter
        '404':
          description: Could not confirm cancellation
  /locations/prefix:
    get:
      tags:
        - Locations
      summary: >-
        Returns a list of all cities, countries, and airports matching a prefix
        string
      operationId: getLocationsByPrefix
      description: >
        Returns a list of locations which match a prefix string.  Supports
        prefix search on primary name, or localized

        name when lang_code is passed as a query parameter.
      parameters:
        - in: query
          name: prefix
          description: >
            Location prefix string. For example, "San Fran" matches "San
            Francisco."
          schema:
            type: string
            example: San
        - in: query
          name: lang_code
          description: |
            ISO-format two character language code.  Optional.
          schema:
            type: string
            minimum: 2
            maximum: 2
            example: en
      responses:
        '200':
          description: List of matching locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
  /locations/cities:
    get:
      tags:
        - Locations
      summary: >-
        Returns a list of all cities. Please have in count that some cities have
        special characters such as ö, è, ñ.
      operationId: getAllCities
      description: |
        Returns a list of all available cities. 
      parameters:
        - in: query
          name: country_code
          description: |
            ISO-format two character country code.
            Omitting this parameter returns all available cities. Optional.
          schema:
            type: string
            minimum: 2
            maximum: 2
            example: US
        - in: query
          name: lang_code
          description: |
            ISO-format two character language code. Returns location name
            localization for the provided lang_code. Optional.
          schema:
            type: string
            minimum: 2
            maximum: 2
            example: en
      responses:
        '200':
          description: List of matching locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
        '400':
          description: Empty array because of bad input parameter.
        '404':
          description: Misspelled endpoint.
  /locations/airports:
    get:
      tags:
        - Locations
      summary: >-
        Returns a list of all airports.  Currently, only English language
        airport names are supported.
      operationId: getAllAirports
      description: |
        Returns a list of all support airports
      parameters:
        - in: query
          name: country_code
          description: |
            ISO-format two character country code.  Optional.
            Omitting this parameter returns all available airports
          schema:
            type: string
            minimum: 2
            maximum: 2
            example: US
      responses:
        '200':
          description: List of matching airports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Airport'
        '400':
          description: Empty array because of bad input parameter.
        '404':
          description: Misspelled endpoint.
  /locations/id:
    get:
      tags:
        - Locations
      summary: Returns a location for a particular ID
      operationId: getLocationsById
      description: >
        Given a Simplenight Location ID (obtained from /location/cities or
        /location/airports endpoint), return the location.  If lang_code is
        passed, return the localized name.
      parameters:
        - in: query
          name: location_id
          description: Simplenight Location ID
          schema:
            type: string
            example: 3040051
        - in: query
          name: lang_code
          description: |
            ISO-format two character language code. Optional.
          schema:
            type: string
            minimum: 2
            maximum: 2
            example: en
      responses:
        '200':
          description: List of matching locations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description: >
        Simplenight uses a API Key passed as a header value for authentication. 
        Simplenight must generate this API Key

        for you.  API Keys identify your organization, and enable separate
        configurations and feature flags.
  schemas:
    Airport:
      properties:
        location_id:
          type: string
          example: YAM
          minLength: 3
          maxLength: 3
        language_code:
          type: string
          minLength: 2
          maxLength: 2
          example: en
        location_name:
          type: string
          example: Sault Ste Marie Airport
        province:
          type: string
        iso_country_code:
          type: string
          minLength: 2
          maxLength: 2
          example: CA
        latitude:
          type: number
          example: 46.48500061035156
        longitude:
          type: number
          example: -84.5093994140625
        location_type:
          type: string
          example: AIRPORT
    City:
      properties:
        location_id:
          type: string
          example: '3040051'
        language_code:
          type: string
          minLength: 2
          maxLength: 2
          example: en
        location_name:
          type: string
          example: Escaldes-Engordany
        province:
          type: string
          example: 8
        iso_country_code:
          type: string
          minLength: 2
          maxLength: 2
          example: AD
        latitude:
          type: number
          example: 42.50729
        longitude:
          type: number
          example: 1.53414
        location_type:
          type: string
          example: CITY
    HotelSearchResponse:
      type: object
      required:
        - hotel_id
        - start_date
        - end_date
        - occupancy
        - room_types
        - rate_plans
        - room_rates
        - hotel_details
        - average_nightly_rate
        - average_nightly_tax
        - average_nightly_base
      properties:
        hotel_id:
          type: string
          example: '16750'
          description: A SimpleNights Hotel ID
        start_date:
          type: string
          format: date
          example: '2021-10-28'
          description: Checkin date
        end_date:
          type: string
          format: date
          example: '2021-10-31'
          description: Checkout date
        occupancy:
          $ref: '#/components/schemas/Occupancy'
        room_types:
          type: array
          items:
            $ref: '#/components/schemas/RoomType'
        rate_plans:
          type: array
          items:
            $ref: '#/components/schemas/RatePlan'
        room_rates:
          type: array
          items:
            $ref: '#/components/schemas/RoomRate'
        hotel_details:
          $ref: '#/components/schemas/HotelDetails'
        average_nightly_rate:
          type: number
          description: >-
            The minimum total nightly rate.  Equal to minimum rate total /
            room_nights
          example: 181.9
        average_nightly_tax:
          type: number
          description: >-
            The minimum total nightly taxes.  Equal to the minimum tax total /
            room_nights
          example: 13.74
        average_nightly_base:
          type: number
          description: >-
            The minimum total nightly taxes.  Equal to the minimum base total /
            room_nights
          example: 168.16
        error:
          $ref: '#/components/schemas/AvailabilityError'
    DiningSearchRequest:
      type: object
      title: Dining search request
      description: >
        Parameters to search for an dinings.  Will return all dinings available
        on any date between

        for a given location (lat/long).
      required:
        - covers
        - current_page
        - date
        - latitude
        - longitude
        - per_page
        - time
      properties:
        covers:
          type: number
          example: 1
        current_page:
          type: number
          example: 1
        per_page:
          type: number
          example: 20
        latitude:
          type: number
          example: '40.6976701'
        longitude:
          type: number
          example: '-74.2598711'
        time:
          type: string
          example: '18:00'
        date:
          type: string
          example: '2019-10-24'
          format: date
    HotelSearchRequest:
      type: object
      title: Hotel search request
      description: >
        Parameters to search for hotels.  Will return all hotels available on
        any date between

        start_date and end_date for a given occupancy (children, adults).
      required:
        - hotel_id
        - start_date
        - end_date
        - occupancy
      properties:
        hotel_id:
          type: string
          example: '5391959'
          description: Simplenight Hotel ID
        start_date:
          type: string
          format: date
          example: '2021-10-28'
          description: The checkin date
        end_date:
          type: string
          format: date
          example: '2021-10-31'
          description: The checkout date
        occupancy:
          $ref: '#/components/schemas/Occupancy'
        language:
          type: string
          minLength: 2
          maxLength: 2
          example: en
          description: Optional. ISO-formatted 2-character language code for hotel details
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: USD
          description: Optional.  ISO-format 3-character currency code
    HotelLocationSearchRequest:
      type: object
      required:
        - location_id
        - start_date
        - end_date
        - occupancy
      properties:
        location_id:
          type: string
          example: '5391959'
          description: Simplenight Location ID
        start_date:
          type: string
          example: '2021-10-28'
          format: date
          description: The checkin date
        end_date:
          type: string
          example: '2021-10-31'
          format: date
          description: The checkout date
        occupancy:
          $ref: '#/components/schemas/Occupancy'
        language:
          type: string
          minLength: 2
          maxLength: 2
          example: en
          description: Optional. ISO-formatted 2-character language code for hotel details
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: USD
          description: Optional.  ISO-format 3-character currency code
    DiningSearchByIdRequest:
      type: object
      required:
        - dining_id
      properties:
        dining_id:
          type: string
          example: TElrK9FiKbYQhObLt2Ut4A
          description: dining_id of the specific dining
    DiningSearchByIdResponse:
      type: object
      properties:
        dining_id:
          type: string
          example: TElrK9FiKbYQhObLt2Ut4A
        name:
          type: string
          example: Cafe 401 & Grill
        images:
          type: array
          items:
            type: string
            example:
              - url1
              - url2
              - url3
        rating:
          type: number
          example: 4
        review_count:
          type: number
          example: 207
        price:
          type: string
          example: $
        categories:
          type: array
          items:
            type: string
            example:
              - Coffee & Tea
              - Portuguese
              - Breakfast & Brunch
        location:
          type: object
          properties:
            latitude:
              type: string
              example: '40.68063'
            longitude:
              type: string
              example: '-74.26826'
            address:
              type: string
              example: 401 Chestnut St, Union, NJ 07083
        phone:
          type: string
          example: '+19086130010'
        hours:
          type: array
          items:
            example:
              - open:
                  - is_overnight: false
                    start: '0800'
                    end: '1400'
                    day: 0
                  - is_overnight: false
                    start: '0800'
                    end: '1400'
                    day: 1
                  - is_overnight: false
                    start: '0800'
                    end: '1400'
                    day: 2
                  - is_overnight: false
                    start: '0800'
                    end: '1400'
                    day: 3
                  - is_overnight: false
                    start: '0800'
                    end: '1400'
                    day: 4
                  - is_overnight: false
                    start: '0800'
                    end: '1430'
                    day: 5
                  - is_overnight: false
                    start: '0800'
                    end: '1430'
                    day: 6
        is_closed:
          type: boolean
        display_phone:
          type: string
          example: (908) 613-0010
    DiningAvailableTimesRequest:
      type: object
      required:
        - dining_id
      properties:
        dining_id:
          type: string
          example: 5D71_0GNtJiAbu-hivtA6g
        covers:
          type: number
          example: 2
          description: No of people
        time:
          type: string
          example: '18:00'
          format: time
          description: selected time
        date:
          type: string
          example: '2021-09-28'
          format: date
    DiningAvailableTimesResponse:
      $ref: '#/components/schemas/DiningResponse'
    DiningResponse:
      type: object
      properties:
        date:
          type: string
          example: '2021-09-24'
          format: date
          description: a specific date
        times:
          type: array
          items:
            type: string
            example:
              - '08:00'
              - '09:00'
              - '10:00'
    DiningReviewsRequest:
      type: object
      required:
        - dining_id
      properties:
        dining_id:
          type: string
          example: 5D71_0GNtJiAbu-hivtA6g
    DiningReviewsResponse:
      type: object
      required:
        - dining_id
      properties:
        rating:
          type: number
          example: 5
        text:
          type: string
          example: >-
            Don't let the small store front or bouncer scare you this is a
            great, elegant speak easy that has just started to make an
            impression on SF. 


            Bartender...
        timestamp:
          type: string
          example: '2021-08-05 02:10:26'
          format: date-time
        user:
          type: object
          properties:
            name:
              type: string
              example: Johnnie R.
            image:
              type: string
              example: >-
                https://s3-media2.fl.yelpcdn.com/photo/c7gjc3rtwN8dfoqfR8o61A/o.jpg
              format: url
    DiningBookingRequest:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        name:
          type: string
          example: Cafe 401 & Grill
        user_id:
          type: string
          example: 4712d644-9de5-427d-92a1-e2b0690bab68
        dining_id:
          type: string
          example: TElrK9FiKbYQhObLt2Ut4A
        covers:
          type: number
          example: 1
        time:
          format: time
          example: '18:00'
          type: string
        date:
          type: string
          example: '2021-10-24'
          format: date
    DiningBookingResponse:
      type: object
      properties:
        note:
          type: string
        record_locator:
          type: string
          example: e409cfaa-69fc-40a8-87a4-d2efa45a984a
        booking_id:
          type: string
          example: ffb6507d-296d-4daf-be5a-63ba0f61be69
        dining_name:
          type: string
          example: Cafe 401 & Grill
        dining_date:
          type: string
          example: '2021-10-24'
        dining_covers:
          type: string
          example: 1
    DiningCancelBookingRequest:
      type: object
      required:
        - dining_id
      properties:
        dining_id:
          type: string
          example: aaab8b53-9f01-4eee-8b57-2ce850babae2
    DiningCancelBookingResponse:
      type: object
      required:
        - latitude
        - longitude
    DiningLocationSearchRequest:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: string
          example: 123.523.2424
          description: latitude of the location
        longitude:
          type: string
          example: 123.242.424
          description: longitude of the location
        current_page:
          type: number
          format: int
          default: 1
          description: current page number
        page_page:
          type: number
          format: int
          default: 20
          description: Item limit per page
        date:
          type: string
          format: date
          description: date for dining
        covers:
          type: number
          description: number of people
        time:
          type: string
          format: time
    DiningSearchResponse:
      type: object
      properties:
        ok:
          type: boolean
          description: a boolean true/false
        message:
          type: string
          example: success
          description: if the request is fulfilled
        total:
          type: number
          example: 240
          default: 0
        data:
          $ref: '#/components/schemas/DiningAdaptarDetails'
    DiningAdaptarDetails:
      type: object
      description: Dining adapter response
      properties:
        dining_id:
          type: string
          example: ENRFu6Py1D4yhZMbu-TN9A
        name:
          type: string
          example: Van Gogh's Ear Cafe
        image:
          type: string
          example: https://s3-media2.fl.yelpcdn.com/bphoto/UjemiDfPpCXl65y77JE-uw/o.jpg
        rating:
          type: number
          example: 4
        review_count:
          type: number
          example: 587
        price:
          type: string
          example: $$
        categories:
          type: array
          items:
            type: string
            example:
              - Cafes
              - Desserts
              - American (Traditional)
        location:
          type: object
          properties:
            latitude:
              type: string
              example: '40.6966917106997'
            longitude:
              type: string
              example: '-74.2691941898077'
            address:
              type: string
              example: 1017 Stuyvesant Ave, Union, NJ 07083
        phone:
          type: string
          example: '+19088101844'
        openings:
          type: array
          items:
            type: string
            example:
              - '17:30'
              - '17:45'
              - '18:00'
    Occupancy:
      type: object
      description: The number of adults and children
      required:
        - adults
        - children
      properties:
        adults:
          type: integer
          example: 2
          description: The number of adults per room
        children:
          type: integer
          example: 0
          description: The number of children per room
        num_rooms:
          type: integer
          example: 1
          description: The number of rooms requested.  Applies to the same room type.
    Capacity:
      type: object
      description: The number of adults and children
      required:
        - adults
        - children
      properties:
        adults:
          type: integer
          example: 3
          description: The number of adults per room
        children:
          type: integer
          example: 0
          description: The number of children per room
    RoomType:
      type: object
      description: The types of physical rooms available
      required:
        - code
        - name
      properties:
        code:
          type: string
          description: The unique ID for the room type
          example: e7418b2b
        name:
          type: string
          description: The descriptive name for the room type
          example: 2 Queen Beds
        description:
          type: string
          description: The long description of the room type
          example: 2 Queen Beds.
        basic_amenities:
          type: array
          items:
            $ref: '#/components/schemas/Amenity'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
        capacity:
          $ref: '#/components/schemas/Capacity'
        bed_types:
          $ref: '#/components/schemas/BedTypes'
        cancellation_policy:
          type: object
          properties:
            summary:
              type: string
              example: NON_REFUNDABLE
            cancellation_deadline:
              type: string
              example: '2026-09-24'
            unstructured_policies:
              type: string
              description: Textual description of hotel rate policies
              example: Non refundable room rate
    Amenity:
      type: string
      enum:
        - free_wifi
        - free_breakfast
        - free_parking
    Photo:
      type: object
      required:
        - url
        - type
        - display_order
      properties:
        url:
          type: string
          example: https://foo.bar/baz.jpg
          description: Hotel image URL.  Always in HTTPS.
        type:
          type: string
          example: exterior
          description: The type of hotel image being returned
        display_order:
          type: integer
          example: 2
          description: A suggested order to display the images, beginning with 1
    BedTypes:
      type: object
      description: The number and type of beds available in the room
      properties:
        total_beds:
          type: integer
          example: 1
          description: The total number of beds in the room
        king_beds:
          type: integer
          example: 1
          description: The total number of king-sized beds in the room
        queen_beds:
          type: integer
          example: 1
          description: The total number of queen-sized beds in the room
        double_beds:
          type: integer
          example: 1
          description: The total number of double beds in the room
        single_or_twin_beds:
          type: integer
          example: 1
          description: The total number of single-sized beds in the room
        murphy_beds:
          type: integer
          example: 1
          description: The total number of Murphy-style beds in the room
        sofa_beds:
          type: integer
          example: 1
          description: The total number of convertible sofa beds in the room
        bunk_beds:
          type: integer
          example: 1
          description: The total number of bunk beds in the room
        other_beds:
          type: integer
          example: 1
          description: Any other type of beds in the room
    RatePlan:
      type: object
      description: Rate plans corresponding to specific hotel bundles and services
      required:
        - code
        - name
        - guarantee_type
        - cancellation_policy
      properties:
        code:
          type: string
          example: S245GK
          description: The unique ID for the room rate plan
        name:
          type: string
          example: 5th Night Free
          description: Textual description of the rate plan
        description:
          type: string
          example: Stay 4 nights and get the 4th night absolutely free
          description: Long description of the rate plan
        basic_amenities:
          $ref: '#/components/schemas/Amenity'
        cancellation_policy:
          $ref: '#/components/schemas/CancellationPolicy'
        unstructured_policies:
          type: string
          example: Cancellations after 24 hours incur a 100% charge
          description: Textual description of hotel policies
    CancellationPolicy:
      type: object
      required:
        - summary
      properties:
        summary:
          $ref: '#/components/schemas/CancellationSummary'
        cancellation_deadline:
          type: string
          format: date-time
          example: '2026-09-24'
        unstructed_policy:
          type: string
          description: Textual description of the cancellation policy
          example: Non refundable room rate
    CancellationSummary:
      type: string
      enum:
        - UNKNOWN_CANCELLATION_POLICY
        - FREE_CANCELLATION
        - NON_REFUNDABLE
        - PARTIAL_REFUND
    RoomRate:
      type: object
      required:
        - code
        - room_type_code
        - rate_plan_code
      properties:
        code:
          type: string
          example: R23634J
          description: The unique identifier for a room rate plan
        room_type_code:
          type: string
          example: S44EJD
          description: The associated unique identifer for a room type
        rate_plan_code:
          type: string
          example: T23442A
          description: The associated unique identifier for a rate plan
        maximum_allowable_occupancy:
          $ref: '#/components/schemas/Capacity'
        total_base_rate:
          type: object
          properties:
            amount:
              type: number
              example: 171.95
            currency:
              type: string
              example: USD
        total_tax_rate:
          type: object
          properties:
            amount:
              type: number
              example: 26.14
            currency:
              type: string
              example: USD
        total:
          type: object
          properties:
            amount:
              type: number
              example: 198.09
            currency:
              type: string
              example: USD
        rate_type:
          type: string
          example: BOOKEABLE
        daily_rates:
          type: string
          example: null
        postpaid_fees:
          type: string
          example: null
        partner_data:
          type: string
          example: null
        markup_applicable:
          type: boolean
          example: true
        inventory_type:
          type: string
          example: priceline
    Price:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          type: string
          example: USD
          minLength: 3
          maxLength: 3
          description: ISO-format 3-character currency code
        amount:
          type: number
          example: 181.9
          description: The price
    HotelDetails:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
          example: Best Western Plus GranTree Inn
          description: Name of the hotel
        address:
          $ref: '#/components/schemas/Address'
        description:
          type: string
          example: The long descriptive test of a hotel
        star_rating:
          type: number
          format: float
          example: 3.5
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        phone_number:
          type: string
          example: +1 (555)-867-5309
          description: Hotel phone number
        email:
          type: string
          example: frontdesk@hotel.com
          format: email
          description: The hotel email address
        homepage_url:
          type: string
          example: https://www.foobazhotel.com/
          description: URL to the website's homepage
        policies:
          type: array
          items:
            $ref: '#/components/schemas/HotelPolicies'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
    GeoLocation:
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          example: '45.69375'
        longitude:
          type: number
          example: '-111.0461'
    Address:
      required:
        - address1
        - city
        - province
        - postal_code
        - country
      properties:
        address1:
          type: string
          example: 1325 North 7th Avenue
          description: The first line of the address.  Required.
        address2:
          type: string
          example: 20th Floor
          description: The second line of the address.  Optional.
        address3:
          type: string
          example: The Executive Suite
          description: The third line of the address.  Optional.
        city:
          type: string
          example: Bozeman
          description: The city of the hotel
        province:
          type: string
          example: MT
          description: The administrative region of the city
        postal_code:
          type: string
          example: MT 59715
          description: The postal code of the hotel
        country:
          type: string
          description: ISO-format two-character country code
          example: US
    HotelPolicies:
      type: object
      properties:
        checkin_time:
          type: string
          format: date-time
          description: The earliest checkin time
        checkout_time:
          type: string
          format: date-time
          description: The latest checkout time
        max_child_age:
          type: integer
          example: 12
          description: The maximum age a guest is considered a child
    AvailabilityError:
      required:
        - type
        - message
      properties:
        type:
          type: object
          enum:
            - UNKNOWN_ERROR: null
            - API_VERSION_UNSUPPORTED: null
            - DATE_SELECTION_INVALID: null
            - HOTEL_NOT_FOUND: null
            - NETWORK_ERROR: null
            - RECOVERABLE_ERROR: null
            - REQUEST_DATA_INVALID: null
            - REQUEST_INCOMPLETE: null
            - REQUEST_NOT_PARSABLE: null
            - SUPPLIER_ERROR: null
        message:
          type: string
          example: Error while searching hotel supplier foo
          description: Unstructed, detailed error message
    HotelBookingRequest:
      required:
        - api_version
        - transaction_id
        - hotel_id
        - room_code
        - language
        - customer
        - traveler
        - payment
      properties:
        api_version:
          type: integer
          example: 1
          description: The API version of this booking request message
        transaction_id:
          type: string
          example: 3ef11392-a96a-423f-8bc6-4207d957a545
          description: Unique ID for this booking transaction
        hotel_id:
          type: string
          example: AHY14Z
          description: The SimpleNight Hotel ID of the property being booked
        room_code:
          type: string
          example: X2HD4J
          description: The room code associated with the room rate to book
        language:
          type: string
          example: en_US
          description: >-
            The language of the request, for hotel details and property
            descriptions
        customer:
          $ref: '#/components/schemas/Customer'
        traveler:
          $ref: '#/components/schemas/Traveler'
        payment:
          $ref: '#/components/schemas/Payment'
        additional_info:
          type: string
          example: Twin bed please
          description: Additional information for hotel booking request
    Customer:
      description: The lead traveler, and booking owner
      required:
        - first_name
        - last_name
        - phone_number
        - email
        - country
      properties:
        first_name:
          type: string
          description: Booking owner given name
          example: John
        last_name:
          type: string
          description: Booking owner family name
          example: Smith
        phone_number:
          type: string
          description: Booking owner primary phone contact
          example: +1 (555) 867-5309
        email:
          type: string
          description: Booking owner primary email address
          example: johnsmith@gmail.com
        country:
          type: string
          description: Two character ISO country code of the lead traveler
          example: US
    Traveler:
      description: The lead traveler of the booking
      required:
        - first_name
        - last_name
        - occupancy
      properties:
        first_name:
          type: string
          example: John
          description: Lead traveler given name
        last_name:
          type: string
          example: Smith
          description: Lead traveler last name
        occupancy:
          $ref: '#/components/schemas/Occupancy'
    Payment:
      description: Payment information for the booking
      required:
        - payment_card_parameters
        - billing_address
      properties:
        payment_method:
          type: string
          default: PAYMENT_TOKEN
        payment_token:
          type: string
          format: nonce
          example: nonce_12323sa
          description: nonce generated by square
        buyer_verification_token:
          type: string
          description: buyer verification token generated by square
        billing_address:
          $ref: '#/components/schemas/Address'
    HotelBookingResponse:
      type: object
      description: The booking response for a successful booking
      required:
        - api_version
        - transaction_id
        - status
        - reservation
      properties:
        locator:
          $ref: '#/components/schemas/Locator'
        hotel_locator:
          type: array
          items:
            properties:
              id:
                type: array
                example: CONF0
              pin:
                type: array
                example: null
        hotel_id:
          type: string
          example: '138819'
        checkin:
          type: string
          example: '2021-07-29'
        checkout:
          type: string
          example: '2021-07-29'
        customer:
          $ref: '#/components/schemas/Customer'
        traveller:
          $ref: '#/components/schemas/Traveler'
        room_rate:
          $ref: '#/components/schemas/RoomRate'
        itinerary:
          type: object
          properties:
            address:
              $ref: '#/components/schemas/Address'
            confirmation:
              type: string
              example: 254-2743193
            display_end_date:
              type: string
              example: Fri, Jul 30 2021
            display_start_date:
              type: string
              example: Thu, Jul 29 2021
            end_date:
              type: string
              example: '2021-07-30'
            name:
              type: string
              example: Courtyard by Marriott Lyndhurst Meadowlands
            price:
              type: object
              properties:
                amount:
                  type: number
                  example: 145.35
                currency:
                  type: string
                  example: USD
            resortFee:
              type: object
              properties:
                amount:
                  type: number
                  example: 145.35
                currency:
                  type: string
                  example: USD
            room_type_name:
              type: string
              description: Name of the room of the hotel selected (Not hotel name)
              example: DOUBLE KING SIZE BED
            start_date:
              type: string
              example: '2021-07-29'
        hotel_address:
          type: string
          example: 1 Polito Avenue
        provider_id:
          type: string
          default: null
        room_type_name:
          type: string
          example: DOUBLE KING SIZE BED
        cancellation_details:
          type: array
          items:
            properties:
              begin_date:
                type: string
                example: '2021-07-16'
              cancellation_type:
                type: string
                example: FREE_CANCELLATION
              description:
                type: string
                example: Free cancellation until 2021-07-25
              display_begin_date:
                type: string
                default: null
              display_end_date:
                type: string
                default: null
              end_date:
                type: string
                example: '2021-07-25'
              penalty_amount:
                type: number
                example: 0
              penalty_currency:
                type: string
                example: USD
              refund_amount:
                type: number
                example: null
              refund_currency:
                type: number
                example: null
    Status:
      description: Success/Failure indicator for a booking
      type: object
      enum:
        - SUCCESS: null
        - FAILURE: null
    StatusNew:
      description: Succes/Failure indicator for a booking with message
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
          default: ''
    PaymentInformation:
      description: Payment related info
      type: object
      properties:
        card_brand:
          type: string
          example: VISA
        last_four_digits:
          type: string
          example: '1111'
    Locator:
      type: object
      description: The record locator
      required:
        - id
      properties:
        id:
          type: string
          example: A398415
          description: booking reference
        pin:
          type: string
          example: 174225
          description: PIN code used to access the reservation
    CancelRequest:
      type: object
      description: >-
        Cancellation information request.  Returns the current matching
        cancellation policy
      required:
        - booking_id
        - last_name
      properties:
        booking_id:
          type: string
          example: eb276848-9093-4f50-9185-1515d658586c
          description: The booking ID returned in the booking message
        last_name:
          type: string
          example: Doe
          description: The lead traveler last name
    CancelDetails:
      type: object
      description: Cancellation policy details
      properties:
        type:
          $ref: '#/components/schemas/CancellationSummary'
        description:
          type: string
          description: Textual description of the cancellation policy
        begin_date:
          type: string
          description: The ISO date that the policy is valid from
        end_date:
          type: string
          description: The ISO date that the policy is valid to
        penalty_amount:
          type: integer
          description: The amount of the cancellation penalty, if any
        penalty_currency:
          type: string
          description: The currency for the penalty amount
    Itinerary:
      type: object
      description: The booking itinerary details
      properties:
        name:
          type: string
          description: The name (for example, hotel name) of the itinerary item
          example: Good Hotel
        price:
          $ref: '#/components/schemas/Price'
        confirmation:
          type: string
          description: The provider confirmation number
          example: A12FS4
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        address:
          $ref: '#/components/schemas/Address'
    CancelResponse:
      type: object
      description: The current matching cancellation policy
      properties:
        is_cancellable:
          type: boolean
          description: Whether, or not the booking is currently cancellable
        booking_id:
          type: string
          description: Booking ID from the Booking Response
          format: uuid
        itinerary:
          $ref: '#/components/schemas/Itinerary'
        details:
          $ref: '#/components/schemas/CancelDetails'
    ConfirmCancelResponse:
      type: object
      description: Confirmation that a booking was cancelled
      properties:
        booking_id:
          type: string
          description: The booking ID from the booking response
        last_name:
          type: string
          description: >-
            The lead traveler last name, used for verification purposes (exact
            match)
    ActivitySearchRequest:
      type: object
      title: Activity search request
      description: >
        Parameters to search for an activity.  Will return all activities
        available on any date between

        begin_date and end_date.
      required:
        - location_id
        - begin_date
        - end_date
        - adults
        - children
      properties:
        location_id:
          type: string
          example: '5128581'
          description: >-
            Simplenight Location ID, returned in a [Location
            Response](#tag/Locations)
        begin_date:
          type: string
          example: '2021-09-30'
          format: date
          description: Search for activities beginning on this date, inclusive
        end_date:
          type: string
          example: '2021-10-07'
          format: date
          description: Search for activities until this date, inclusive
        adults:
          type: integer
          example: 2
          description: The number of adults requesting a ticket, or admittance
        children:
          type: integer
          example: 0
          description: The number of children request a ticket, or admittance
    ActivitySearchResponse:
      type: object
      description: >
        Returns activity options available between begin_date and end_date. 
        Activities might not be available on all

        dates.  To find the days a specific activity is available, the details
        endpoint must be requested, using the code

        parameter returned in this response.
      properties:
        name:
          type: string
          description: The activity, or tour name
          example: NYC city lights 30-minute helicopter ride from New Jersey
        code:
          type: string
          description: >
            The identifier for this product type.  This code is subsequently
            used to reference the product

            in either the details, variants, or booking endpoints.
          example: c40a248f
        activity_id:
          type: string
          description: >-
            A permanent activity ID returned in Availability, which can be used
            alternatively to activity `code`
          example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
        description:
          type: string
          description: Free-form text describing the activity
          example: >
            "Meeting Point: Passengers can drive to Linden Municipal Airport
            (there is free parking at the airport).Passengers can also take New
            Jersey Transit to Linden Station via Northeast Corridor (Red Line,
            the screen will show Trenton or Rahway Line) or New Jersey Coast
            Line (Blue line, the screen will show Long Branch or South Amboy).
            Please note the NJ Transit operates trains to/from Linden, NJ from
            New York Penn Station.\nBegin your aerial journey aboard a
            high-performance helicopter and pass Newark Liberty International
            Airport on the way to Manhattan, with excellent views of the Statue
            of Liberty and the massive skyscrapers of the Financial District.
            Head along the Hudson River and pass the Empire State Building,
            Madison Square Garden, Hudson Yards, Chelsea, West Village, SoHo and
            TriBeCa.Don't miss the 9/11 Memorial and One World Trade Center as
            well. You'll also be able to view gorgeous Central Park, grand
            Rockefeller Center and dazzling Times Square. Fly within sight of
            the Metropolitan Museum of Art, then turn around north of Roosevelt
            Island for one last spectacular view of the Manhattan skyline."
        activity_date:
          type: string
          example: '2021-09-30'
          description: The initial date an activity is available
          format: date
        total_price:
          $ref: '#/components/schemas/Price'
        total_base:
          $ref: '#/components/schemas/Price'
        total_tax:
          $ref: '#/components/schemas/Price'
        categories:
          type: array
          example:
            - Activities
            - Air activities
            - Helicopter rides
          description: A list of categories applicable to this activity product
          items:
            type: string
        images:
          type: array
          description: A list of images associated with this activity product
          items:
            $ref: '#/components/schemas/Photo'
        rating:
          type: number
          description: The average user rating for this activity product
          example: 4.5
        reviews:
          type: integer
          description: The number of user reviews for this activity product
          example: 28
        reviews_avg:
          type: string
          example: 4.5
        voucher_access_usage:
          type: string
          description: Review
          example: MOBILE
        languages:
          type: array
          description: Language
          items:
            example:
              - code: en
                name: English
              - code: fr
                name: French
          properties:
            code:
              type: string
            name:
              type: string
        features:
          type: array
          items:
            example:
              - code: istant
                name: Instant confirmation
              - code: free
                name: FREE CANCELLATION
          properties:
            code:
              type: string
            name:
              type: string
        services:
          type: array
          description: Services
          items:
            example:
              - code: pick-up
                name: Hotel pick up
              - code: transport
                name: Transport included
          properties:
            code:
              type: string
            name:
              type: string
        retail_price:
          description: From Price
          type: object
          example:
            currency: USD
            value: 204
            formatted_value: $ 204.00
            formatted_iso_value: $204.00
          properties:
            currency:
              type: string
            value:
              type: number
            formatted_value:
              type: string
            formatted_iso_value:
              type: string
        meeting_point:
          type: string
          description: Meeting Place
          example: >-
            Passengers can drive to Linden Municipal Airport (there is free
            parking at the airport).Passengers can also take New Jersey Transit
            to Linden Station via Northeast Corridor (Red Line, the screen will
            show Trenton or Rahway Line) or New Jersey Coast Line (Blue line,
            the screen will show Long Branch or South Amboy). Please note the NJ
            Transit operates trains to/from Linden, NJ from New York Penn
            Station.
        duration_range:
          type: object
          description: Duration
          example: '0:30:00'
          properties:
            max:
              type: string
        operational_days:
          type: string
          description: Availability
    BusinessContact:
      type: object
      description: |
        Contact information for a business, like an activity provider, or hotel
      properties:
        name:
          type: string
          description: The business name
        email:
          type: string
          description: An email address for the business
        website:
          type: string
          description: The official website for the business
        phone:
          type: array
          items:
            type: string
        address:
          type: string
          description: Free form address for the business
          example: 123 Business Way
    ActivityLocation:
      type: object
      description: >
        The specific location of an activity product, including its latitude and
        longitude
      properties:
        latitude:
          type: number
        longitude:
          type: number
        address:
          type: string
          example: 123 Buiness Way
    ActivityDetailsResponse:
      type: object
      description: >
        Contains the specific dates an activity is available, along with details
        like its cancellation policy
      properties:
        code:
          type: string
          description: The identifier for this activity product
          example: 1a87b6d7
        activity_id:
          type: string
          description: >-
            A permanent activity ID returned in Availability, which can be used
            alternatively to activity `code`
          example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
        type:
          type: string
          description: An enum value representing the type of activity
        categories:
          type: array
          items:
            type: string
        timezone:
          type: string
          description: The local time zone for the activity
          example: America/Los_Angeles
        images:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
        contact:
          $ref: '#/components/schemas/BusinessContact'
        locations:
          $ref: '#/components/schemas/ActivityLocation'
        availabilities:
          type: array
          description: >-
            The specific days a property is available.  Times are available in
            the Variants response.
          items:
            type: string
            format: date
        additional_info:
          type: object
        policies:
          type: array
          description: Free-form policies for the activity
          items:
            type: string
        cancellations:
          $ref: '#/components/schemas/CancellationPolicy'
        provider_data:
          type: string
        rating:
          type: string
          format: decimal
          description: Star rating on product
        reviews:
          type: string
          format: intiger
          description: Review count on product
        sale_status:
          type: string
          description: Venue status – opening times / Closed
        duration:
          type: string
          format: time
          description: Duration
        instant_ticket_delivery:
          type: boolean
          description: Instant Ticket Delivery
        last_admission_window:
          type: string
          description: Last Admission
        skip_line:
          type: boolean
          description: Skip the Line
        wheelchair_access:
          type: boolean
          description: Wheel chair accessible
        smartphone_ticket:
          type: boolean
          description: Smartphone tickets accepted
        audio_guide_languages:
          type: string
          description: Audio Guide
        live_guide_languages:
          type: string
          description: Live Guide Language
        safety_measures:
          type: object
          description: COVID safety measures
          properties:
            has_reduced_capacity:
              type: boolean
            has_temperature_checks:
              type: boolean
            cash_accepted:
              type: boolean
            has_intensified_cleaning:
              type: boolean
            online_ticketing_only:
              type: boolean
            has_hand_sanitizer_available:
              type: boolean
            has_social_distancing:
              type: boolean
        best_time_to_visit:
          type: string
          format: time
          description: Best Time to Visit
        whats_included:
          type: string
          description: What's included
        whats_excluded:
          type: string
          description: What’s not included
        exhibitions:
          type: array
          description: Exhibitions
          items:
            type: string
        reviews_avg:
          type: string
        voucher_access_usage:
          type: string
          description: Review
        languages:
          type: array
          description: Language
          items:
            example:
              - code: en
                name: English
              - code: fr
                name: French
          properties:
            code:
              type: string
            name:
              type: string
        features:
          type: array
          description: Features
          items:
            example:
              - code: istant
                name: Instant confirmation
          properties:
            code:
              type: string
            name:
              type: string
        services:
          type: array
          description: Services
          items:
            type: object
          properties:
            code:
              type: string
            name:
              type: string
        service_fee:
          type: array
          description: Booking Fee
          items:
            type: object
          properties:
            code:
              type: string
            name:
              type: string
        retail_price:
          description: From Price
          type: object
          properties:
            currency:
              type: string
            value:
              type: number
            formatted_value:
              type: string
            formatted_iso_value:
              type: string
        meeting_point:
          type: string
          description: Meeting Place
        duration_range:
          type: object
          description: Duration
          properties:
            max:
              type: string
        operational_days:
          type: string
          description: Availability
        comments:
          type: object
        culture_shock:
          type: string
        description:
          type: string
        destination:
          type: string
        destination_id:
          type: string
        excluded:
          type: object
        highlights:
          type: object
        included:
          type: object
        info:
          type: string
        itinerary_details:
          type: object
        language:
          type: object
        min_age:
          type: string
        name:
          type: string
        physicality:
          type: string
        total_price:
          type: object
          properties:
            amount:
              type: number
              format: float
            currency:
              type: string
              default: USD
        venues:
          type: array
          items:
            type: object
        when:
          type: string
    MultiProductSearchRequest:
      type: object
      description: >
        Parameters to search for multiple products.  Within this request, there
        can be multiple sub-search types,

        such as an ActivitySearch, HotelSearch, or DiningSearch.  The results
        for each product type will be returned

        in a single response.
      properties:
        product_types:
          type: array
          items:
            example:
              - activities
              - hotels
              - dining
        activity_search:
          $ref: '#/components/schemas/ActivitySearchRequest'
        hotel_search:
          $ref: '#/components/schemas/HotelSearchRequest'
        dining_search:
          $ref: '#/components/schemas/DiningSearchRequest'
    MultiProductSearchResponse:
      type: object
      description: >
        Parameters to search for multiple products.  Within this request, there
        can be multiple sub-search types,

        such as an ActivitySearch, HotelSearch, or TransportationSearch.  The
        results for each product type will be returned

        in a single response.
      properties:
        product_types:
          type: array
          items:
            example:
              - activities
              - hotels
              - dining
        hotel_results:
          type: array
          items:
            $ref: '#/components/schemas/HotelSearchResponse'
        activity_results:
          type: array
          items:
            $ref: '#/components/schemas/ActivitySearchResponse'
        dining_results:
          type: array
          items:
            $ref: '#/components/schemas/DiningSearchResponse'
    MultiProductCancelConfirmRequest:
      type: object
      description: >
        Parameters to cancel multiple items from a single booking individually
        if it's cancellable i.e, is_cancellable is true in

        [MultiCancel] (#multi/cancel) response
      properties:
        booking_id:
          type: string
        last_name:
          type: string
        activity_booking_id:
          type: string
        hotel_booking_id:
          type: string
        dining_booking_id:
          type: string
    MultiProductCancelConfirmResponse:
      type: object
      description: >
        Parameters to search for multiple products.  Within this request, there
        can be multiple sub-search types,

        such as an ActivitySearch, HotelSearch, or TransportationSearch.  The
        results for each product type will be returned

        in a single response.
      properties:
        booking_id:
          type: string
        record_locator:
          type: string
        booking_status:
          $ref: '#/components/schemas/BookingStatus'
        cancelled:
          type: boolean
        amount_refunded:
          type: number
          format: double
    MultiProductCancelRequest:
      type: object
      description: >
        Parameters to search products of a specific booking number. order number
        and last name is required to response with matching order and items

        Item can be of different categories as dining, activity, hotels.
      properties:
        booking_id:
          type: string
          description: >-
            Simplenight booking id provided after booking completion on email or
            in order summary
        last_name:
          type: string
          description: >-
            Last name used to fill the primary contact details  while placing
            the booking
    MultiProductCancelResponse:
      type: object
      description: >
        Parameters to search for multiple products.  Within this request, there
        can be multiple sub-search types,

        such as an ActivitySearch, HotelSearch, or TransportationSearch.  The
        results for each product type will be returned

        in a single response.
      properties:
        booking_id:
          type: string
        total_price:
          type: number
          format: double
          example: 0
        total_tax:
          type: number
          format: double
          example: 0
        currency:
          type: string
          default: USD
          description: currency at the time of checkout
        itinerary:
          $ref: '#/components/schemas/MultiProductItinerary'
    MultiProductItinerary:
      type: object
      description: |
        Multi product items.
      properties:
        activities:
          type: array
          items:
            $ref: '#/components/schemas/MultiProductActivityCancelResponse'
        hotels:
          type: array
          items:
            $ref: '#/components/schemas/MultiProductHotelCancelResponse'
        dining:
          type: array
          items:
            $ref: '#/components/schemas/MultiProductDiningCancelResponse'
        transportation:
          type: array
          items:
            $ref: '#/components/schemas/MultiProductTransportCancelResponse'
    BookingStatus:
      type: string
      enum:
        - booked
        - cancelled
        - pending
        - failed
    MultiProductTransportCancelResponse:
      type: object
      description: >
        Response for multi product - response of dining item inside cancel
        lookup 'itinerary' object
      properties:
        booking_status:
          $ref: '#/components/schemas/BookingStatus'
        covers:
          type: number
          example: 2
        drop_address:
          type: string
          example: Miami Gardens, Miami Gardens, Florida, United States
        pickup_address:
          type: string
          example: Miami, Miami, Florida, United States
        pickup_date:
          type: string
          example: '2021-07-29 14:30:59'
        price:
          type: number
          example: 224.68
        reservation_id:
          type: string
          example: WA13194998-1
        vehicleDetails:
          type: object
          properties:
            maxBags:
              type: string
              example: '5'
            maxPassengers:
              type: string
              example: '2'
            vehicleCode:
              type: string
              example: SU04
            vehicleDescriptionDetails:
              type: string
            vehicleName:
              type: string
              example: Sport Utility Vehicle
    MultiProductDiningCancelResponse:
      type: object
      description: >
        Response for multi product response of dining item inside cancel lookup
        'itinerary' object
      properties:
        booking_status:
          $ref: '#/components/schemas/BookingStatus'
        covers:
          type: number
          example: 2
        date:
          type: string
          format: date
        dining_booking_id:
          type: string
        name:
          type: string
          description: Name of the dining item
        record_locator:
          type: string
          format: uuid
    MultiProductHotelCancelResponse:
      type: object
      description: >
        Response for multi product response of hotel item inside cancel lookup
        'itinerary' object
      properties:
        is_cancellable:
          type: boolean
        booking_status:
          $ref: '#/components/schemas/BookingStatus'
        hotel_booking_id:
          type: string
        Itinerary:
          $ref: '#/components/schemas/HotelItineraryItem'
    CancellationType:
      type: string
      enum:
        - UNKNOWN_CANCELLATION_POLICY
        - FREE_CANCELLATION
        - NON_REFUNDABLE
        - PARTIAL_REFUND
    HotelItineraryItem:
      type: object
      description: |
        Response for hotel itinerary item
      properties:
        state_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        address:
          $ref: '#/components/schemas/Address'
        details:
          $ref: '#/components/schemas/HotelCancellationDetails'
        display_end_date:
          type: string
          example: Sat, Jul 23 2022
        display_start_date:
          type: string
          example: Wed, Jul 6 2022
        name:
          type: string
          example: Crowne Plaza Newark Airport
        price:
          type: object
          properties:
            amount:
              type: number
              example: 126.03
            currency:
              type: string
              example: USD
        resort_fee:
          type: object
          properties:
            amount:
              type: number
              example: 126.03
            currency:
              type: string
              example: USD
        tax:
          type: object
          properties:
            amount:
              type: number
              example: 126.03
            currency:
              type: string
              example: USD
        room_type_name:
          type: string
          example: DOUBLE TWO BEDS
        start_date:
          type: string
          example: '2022-07-06'
    HotelCancellationDetails:
      type: object
      description: |
        Hotel 'itinerary' details for cancel
      properties:
        cancellation_type:
          $ref: '#/components/schemas/CancellationType'
        description:
          type: string
          description: Description of the hotel item
        begin_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        penalty_amount:
          type: number
          format: double
        refund_amount:
          type: number
          format: double
        refund_currency:
          type: string
          example: USD
    MultiProductActivityCancelResponse:
      type: object
      description: >
        Response for multi product response of activity item inside cancel
        lookup 'itinerary' object
      properties:
        is_cancellable:
          type: boolean
        activity_title:
          type: string
          description: Name of the activity
        activity_date:
          type: string
          format: date
        activity_booking_id:
          type: string
        booking_status:
          $ref: '#/components/schemas/BookingStatus'
        description:
          type: string
          description: Description fot the activity item
        begin_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        amount:
          type: number
          format: double
        payment_information:
          $ref: '#/components/schemas/PaymentInformation'
        refund_amount:
          type: number
          format: double
        tax:
          type: number
          format: double
        currency:
          type: string
          example: USD
        activity_reservation:
          $ref: '#/components/schemas/ActivityReservation'
    ActivityReservation:
      type: object
      description: |
        Mostly to be used with Multi Cancel
      properties:
        status:
          $ref: '#/components/schemas/StatusNew'
        record_locator:
          $ref: '#/components/schemas/Locator'
        items:
          $ref: '#/components/schemas/MultiProductActivityBookingResponse'
        activity_id:
          type: string
        activity_name:
          type: string
        address:
          type: string
        date:
          type: string
          example: Thu, Jul 29 2021
        time:
          type: string
          example: 18:00 AM
        total_base:
          type: number
          format: double
        total_tax:
          type: number
          format: double
        total_price:
          type: number
          format: double
        activity_reservation_id:
          type: string
    ActivityTicketRequest:
      type: object
      description: >
        The `code` from an [Availability](#operation/multiProductAvailability)
        request, and an `activity_date` from an

        [Activity Details](#operation/activityDetails) request.
      properties:
        code:
          type: string
          example: 0e29b9ef
        activity_date:
          type: string
          format: date
        currency:
          type: string
          example: USD
    ActivityTicketResponse:
      type: object
      description: |
        The available ticket types for a specific activity on a specific date.
      properties:
        variants:
          type: object
          properties:
            '19:30':
              type: array
              items:
                properties:
                  code:
                    type: string
                    example: 11573310389
                  name:
                    type: string
                    example: Category A (Ticket)
                  description:
                    type: string
                    example: No Description
                  price:
                    type: number
                    example: 307.64
                  provider_price:
                    type: number
                    example: 274.68
                  capacity:
                    type: number
                    example: 15
                  min_capacity:
                    type: number
                    example: 1
                  aditional:
                    type: object
                  currency:
                    type: string
                    example: USD
                  type:
                    type: string
                    example: Musement
    MultiProductHotelBookingRequest:
      type: object
      description: >-
        Hotel booking request, specifically for use with the [Multi
        Product](#tags/MultiProduct) API.
      properties:
        hotel_id:
          type: string
          description: The `hotel_id` from an availability response
          example: 14479
        room_code:
          type: string
          description: The `code` from a `room_type` object within an availability response
          example: b9f088ea
    MultiProductDiningBookingRequest:
      type: object
      description: >-
        Dining booking request, specifically for use with the [Multi
        Product](#tags/MultiProduct) API.
      properties:
        dining_id:
          type: string
          description: The `dining_id` from an availability response
          example: nbE-VbwCKx416STfWH0wkQ
        name:
          type: string
          description: The `name` from object within an availability response
          example: Galpao Gaucho Brazilian Steakhouse
        user_id:
          type: string
          description: unique id for user
          example: a169451c-8525-4352-b8ca-070dd449a1a5
        covers:
          type: string
          description: The number of people for dining
          example: '2'
        time:
          type: string
          format: time
          description: The time of the dining
          example: '18:00'
        date:
          type: string
          format: date
          description: The date of dining
          example: '2021-10-24'
        customer:
          $ref: '#/components/schemas/Customer'
    MultiProductActivityBookingRequest:
      type: object
      description: >-
        Activity booking request, specifically for use with the [Multi
        Product](#tags/MultiProduct) API
      properties:
        code:
          type: string
          example: c8d046ad
          description: The `code` from an availability response
        language_code:
          type: string
          example: en
          description: Two-character ISO language code
        activity_date:
          type: string
          format: date
          description: The date of the activity
          example: '2021-10-24'
        activity_time:
          type: string
          format: time
          description: The time of the activity
          example: '07:00'
        currency:
          type: string
          description: Three-character ISO currency code
          example: US
        items:
          type: array
          items:
            properties:
              code:
                type: string
                description: >
                  The `code` from the Activity Tickets/Variants response.  This
                  code represents the specific

                  ticket type being purchased
                example: 10611347526
              quantity:
                type: integer
                description: The number of tickets of this type to purchase
                example: 2
    MultiProductActivityBookingResponse:
      type: object
      description: The activity reservation in a multi-product booking
      properties:
        status:
          $ref: '#/components/schemas/StatusNew'
        activity_name:
          type: string
          example: Ground Zero walking tour with 9-11 Memorial and Museum tickets
        record_locator:
          $ref: '#/components/schemas/Locator'
        items:
          type: array
          items:
            properties:
              code:
                type: string
                example: '2645964546'
              quantity:
                type: number
                example: 1
        activity_id:
          type: string
          example: 5fd67fa6:04353b69-2052-43a9-a109-fc238d438001
        total_base:
          type: number
        total_tax:
          type: number
        total_price:
          type: number
        activity_reservation_id:
          type: string
          example: b65a86b5-72cb-4fbf-8b98-7fa829a4294d
        date:
          type: string
          example: Thu, Jul 29 2021
        time:
          type: string
          example: 10:30 AM
        address:
          type: string
          example: United States of America, New York
    MultiProductDiningBookingResponse:
      type: object
      description: >-
        Response structure for Dining when booked using
        [Multi/Book](#multi/book)
      properties:
        note:
          type: string
          example: ''
        record_locator:
          type: string
          format: uuid
          example: 5c59523e-4d49-4309-951d-1c7459906ecf
        booking_id:
          type: string
          format: uuid
          example: 5c59523e-4d49-4309-951d-1c7459906ecf
        dining_name:
          type: string
          example: Ashoka Indian Restaurant
        dining_date:
          type: string
          format: date
          example: '2021-07-29'
        dining_time:
          type: string
          example: '16:30'
        dining_address:
          type: string
          example: 489 Columbus Ave, New York, NY 10024
        dining_covers:
          type: string
          example: '1'
    MultiDetailsRequest:
      type: object
      description: Request payload for [Multi details](#mutlti/details)
      properties:
        activity_detail:
          type: object
          properties:
            code:
              type: string
              example: 145dba10
            currency:
              type: string
              example: USD
            date_from:
              type: string
              format: date
              example: '2021-09-24'
            date_to:
              type: string
              format: date
              example: '2021-10-23'
        dining_detail:
          type: object
          properties:
            dining_id:
              type: string
              example: mi3r8tPY-nHGfsl-9BGmBw
    MultiDetailsResponse:
      type: object
      description: Response for Multi details[#mutlti/details]
      properties:
        activity_result:
          $ref: '#/components/schemas/ActivityDetailsResponse'
        dining_result:
          type: object
          properties:
            categories:
              type: array
              items:
                type: string
            dining_id:
              type: string
              example: mi3r8tPY-nHGfsl-9BGmBw
            display_phone:
              type: string
              example: (917) 268-7268
            hours:
              type: array
              items:
                properties:
                  hours_type:
                    type: string
                    example: REGULAR
                  is_open_now:
                    type: boolean
                  open:
                    type: array
                    items:
                      properties:
                        day:
                          type: number
                          example: 0
                        end:
                          type: string
                          example: '2300'
                        is_overnight:
                          type: boolean
                          example: false
                        start:
                          type: string
                          example: '1700'
            images:
              type: array
              items:
                type: string
            is_closed:
              type: boolean
            location:
              type: object
              properties:
                address:
                  type: string
                  example: 32 E 32nd St, New York, NY 10016
                latitude:
                  type: number
                  example: 40.746042
                longitude:
                  type: number
                  example: -73.983454
            name:
              type: string
              example: Sushi By Boū - NoMad
            phone:
              type: string
              example: '+19172687268'
            price:
              type: string
              example: $$$
            rating:
              type: number
              example: 4.5
            review_count:
              type: number
              example: 216
    MultiDetailsRequestHotel:
      type: object
      description: Request payload for [Multi hotel details](#mutlti/hotel-details)
      properties:
        hotel_id:
          type: string
          example: '112715'
        start_date:
          type: string
          example: '2021-10-10'
        end_date:
          type: string
          example: '2021-10-11'
        occupancy:
          $ref: '#/components/schemas/Occupancy'
    MultiDetailsResponseHotel:
      type: object
      description: Response for Multi hotel details
      properties:
        hotel_id:
          type: string
          example: '112715'
        start_date:
          type: string
          example: '2021-10-10'
        end_date:
          type: string
          example: '2021-10-11'
        hotel_details:
          $ref: '#/components/schemas/HotelDetails'
        occupancy:
          $ref: '#/components/schemas/Occupancy'
        room_types:
          $ref: '#/components/schemas/RoomType'
        avg_nightly_rate:
          type: number
          example: 204.1
        avg_nightly_base:
          type: number
          example: 188.94
        avg_nightly_tax:
          type: number
          example: 15.17
    MultiProductBookingRequest:
      type: object
      description: Booking request supporting multiple products in a single transaction.
      properties:
        api_version:
          type: integer
          example: 1
          description: The API version of the request
        transaction_id:
          type: string
          format: uuid
          description: >-
            Arbitrary string used to identify a request, and prevent duplicate
            bookings
        language:
          type: string
          description: a locale string for the customer
          example: en_US
        customer:
          $ref: '#/components/schemas/Customer'
        traveler:
          $ref: '#/components/schemas/Traveler'
        payment:
          $ref: '#/components/schemas/Payment'
        hotel_booking:
          type: array
          title: Hotels
          description: |
            Array of Hotel items to be booked - must follow the given structure
          items:
            $ref: '#/components/schemas/MultiProductHotelBookingRequest'
        activity_booking:
          type: array
          title: Activities
          description: >
            Array of activity items to be booked - must follow the given
            structure
          items:
            $ref: '#/components/schemas/MultiProductActivityBookingRequest'
        dining_booking:
          type: array
          title: Dinings
          description: |
            Array of dining items to be booked - must follow the given structure
          items:
            $ref: '#/components/schemas/MultiProductDiningBookingRequest'
        additional_info:
          type: string
          description: Additional information for booking request
          example: Twin bed please
    MultiProductBookingResponse:
      type: object
      description: >-
        Booking response for multiple product types, booked in a single
        transaction/request.
      properties:
        api_version:
          type: integer
          example: 1
          description: The API version of the response
        transaction_id:
          type: string
          format: uuid
          description: The echoed transaction ID from the booking request
        status:
          $ref: '#/components/schemas/Status'
        booking_id:
          type: string
          description: The Simplenight Record Locator for the completed booking
          example: R75QY0B9
        booking_reference:
          type: number
        hotel_reservation:
          type: array
          items:
            $ref: '#/components/schemas/HotelBookingResponse'
        activity_reservation:
          type: array
          items:
            $ref: '#/components/schemas/MultiProductActivityBookingResponse'
        dining_reservation:
          type: array
          items:
            $ref: '#/components/schemas/MultiProductDiningBookingResponse'
